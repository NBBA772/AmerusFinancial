{"version":3,"file":"PipelineHeader-_KSK-ne6.js","sources":["../../../../server/database/repositories/crmServices.ts","../../../../components/dashboard/PipelineHeader.vue"],"sourcesContent":["import prisma from \"~/server/database/client\";\nimport { IUser } from '~/types/IUser';\n\n\nexport async function createGHLContact(data: IUser) {\n  console.log(data)\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  myHeaders.append(\"Authorization\", `${process.env.GHL_API_KEY}`);\n\n  var raw = JSON.stringify({\n    \"firstName\": data.firstName,\n    \"lastName\": data.lastName,\n    \"email\": data.email,\n    \"phone\": data.phone,\n    tags: [\n      \"newClient\"\n  ],\n  });\n\n\n  fetch(\"https://rest.gohighlevel.com/v1/contacts/\", {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  })\n    .then(response => response.text())\n    .then(result => console.log(result))\n    .catch(error => console.log('error', error));\n}\n\nexport async function getGHLPipelines() {\n  const config = useRuntimeConfig()\n    var myHeaders = new Headers();\n    myHeaders.append(\"Authorization\", `${config.public.GHL_API_KEY}`);\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n    };\n    \n    return fetch(\"https://rest.gohighlevel.com/v1/pipelines/\", requestOptions)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(result => {\n        console.log(result);\n        return result; // Assuming you want to return the result\n      })\n      .catch(error => {\n        console.log('Error:', error);\n        throw error; // Rethrow the error to be caught elsewhere if needed\n      });\n  }\n\n  \nexport async function getGHLOpportunities(pipelineId: String, stageId: String) {\n    const config = useRuntimeConfig()\n      var myHeaders = new Headers();\n      myHeaders.append(\"Authorization\", `${config.public.GHL_API_KEY}`);\n      var requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n      };\n      \n      return fetch(`https://rest.gohighlevel.com/v1/pipelines/${pipelineId}/opportunities/?stageId=${stageId}`, requestOptions)\n        .then(response => {\n          if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n          }\n          return response.json();\n        })\n        .then(result => {\n          console.log(result);\n          return result; // Assuming you want to return the result\n        })\n        .catch(error => {\n          console.log('Error:', error);\n          throw error; // Rethrow the error to be caught elsewhere if needed\n        });\n}","<script setup lang=\"ts\">\nimport {\n  getGHLPipelines,\n  getGHLOpportunities,\n} from \"~/server/database/repositories/crmServices\";\n\nconst pipelines = await getGHLPipelines();\nconsole.log(pipelines.pipelines[1].stages[0].id);\nconst newClientOpportunities = await getGHLOpportunities(\n  pipelines.pipelines[1].id,\n  pipelines.pipelines[1].stages[0].id\n);\n\nconst newFrequentlyAskedQuestionsOpportunities = await getGHLOpportunities(\n  pipelines.pipelines[0].id,\n  pipelines.pipelines[0].stages[0].id\n);\n</script>\n<template>\n  <div class=\"p-2 m-2\">\n    <h3 class=\"text-3xl\">{{ pipelines.pipelines[1].name }}</h3>\n    <p class=\"text-2xl\">{{ newClientOpportunities.meta.total }}</p>\n    <p>{{ newClientOpportunities.opportunities[0].contact.name }}</p>\n    <p>{{ newClientOpportunities.opportunities[0].contact.phone }}</p>\n    <p>{{ newClientOpportunities.opportunities[0].contact.email }}</p>\n    <p>{{ newClientOpportunities.opportunities[0].status }}</p>\n    <p>{{ newClientOpportunities.opportunities[0].contact.tags[0] }}</p>\n  </div>\n  <div class=\"p-2 m-2\">\n    <h3 class=\"text-3xl\">{{ pipelines.pipelines[0].name }}</h3>\n    <p class=\"text-2xl\">\n      {{ newFrequentlyAskedQuestionsOpportunities.meta.total }}\n    </p>\n    <p>\n      {{\n        newFrequentlyAskedQuestionsOpportunities.opportunities[0].contact.name\n      }}\n    </p>\n    <p>\n      {{\n        newFrequentlyAskedQuestionsOpportunities.opportunities[0].contact.phone\n      }}\n    </p>\n    <p>\n      {{\n        newFrequentlyAskedQuestionsOpportunities.opportunities[0].contact.email\n      }}\n    </p>\n    <p>\n      {{ newFrequentlyAskedQuestionsOpportunities.opportunities[0].status }}\n    </p>\n    <p>\n      {{\n        newFrequentlyAskedQuestionsOpportunities.opportunities[0].contact\n          .tags[0]\n      }}\n    </p>\n  </div>\n</template>"],"names":["_withAsyncContext"],"mappings":";;;;;;;;;;;;;;;;;;AAgCA,eAAsB,kBAAkB;AACtC,QAAM,SAAS;AACT,MAAA,YAAY,IAAI;AACpB,YAAU,OAAO,iBAAiB,GAAG,OAAO,OAAO,WAAW,EAAE;AAChE,MAAI,iBAAiB;AAAA,IACnB,QAAQ;AAAA,IACR,SAAS;AAAA,EAAA;AAGX,SAAO,MAAM,8CAA8C,cAAc,EACtE,KAAK,CAAY,aAAA;AACZ,QAAA,CAAC,SAAS,IAAI;AAChB,YAAM,IAAI,MAAM,uBAAuB,SAAS,MAAM,EAAE;AAAA,IAC1D;AACA,WAAO,SAAS;EAAK,CACtB,EACA,KAAK,CAAU,WAAA;AACd,YAAQ,IAAI,MAAM;AACX,WAAA;AAAA,EAAA,CACR,EACA,MAAM,CAAS,UAAA;AACN,YAAA,IAAI,UAAU,KAAK;AACrB,UAAA;AAAA,EAAA,CACP;AACL;AAGoB,eAAA,oBAAoB,YAAoB,SAAiB;AAC3E,QAAM,SAAS;AACT,MAAA,YAAY,IAAI;AACpB,YAAU,OAAO,iBAAiB,GAAG,OAAO,OAAO,WAAW,EAAE;AAChE,MAAI,iBAAiB;AAAA,IACnB,QAAQ;AAAA,IACR,SAAS;AAAA,EAAA;AAGJ,SAAA,MAAM,6CAA6C,UAAU,2BAA2B,OAAO,IAAI,cAAc,EACrH,KAAK,CAAY,aAAA;AACZ,QAAA,CAAC,SAAS,IAAI;AAChB,YAAM,IAAI,MAAM,uBAAuB,SAAS,MAAM,EAAE;AAAA,IAC1D;AACA,WAAO,SAAS;EAAK,CACtB,EACA,KAAK,CAAU,WAAA;AACd,YAAQ,IAAI,MAAM;AACX,WAAA;AAAA,EAAA,CACR,EACA,MAAM,CAAS,UAAA;AACN,YAAA,IAAI,UAAU,KAAK;AACrB,UAAA;AAAA,EAAA,CACP;AACT;;;;;;AC7EA,UAAM,aAAY,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAM,iBAAgB;AAChC,YAAA,IAAI,UAAU,UAAU,CAAC,EAAE,OAAO,CAAC,EAAE,EAAE;AAC/C,UAAM,0BAAyB,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAM;AAAA,MACnC,UAAU,UAAU,CAAC,EAAE;AAAA,MACvB,UAAU,UAAU,CAAC,EAAE,OAAO,CAAC,EAAE;AAAA,IAAA,CACnC;AAEA,UAAM,4CAA2C,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAM;AAAA,MACrD,UAAU,UAAU,CAAC,EAAE;AAAA,MACvB,UAAU,UAAU,CAAC,EAAE,OAAO,CAAC,EAAE;AAAA,IAAA,CACnC;;;;;;;;;;;;"}