{
  "resolvedId": "/Users/amerusfinancial/Desktop/projects/Amerus/app/components/sections/IndividualAndFamilyInsurancePage/IndemnityProsAndCons.vue?nuxt_component=async&nuxt_component_name=IndemnityProsAndCons",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <BasicSection class=\"container mx-auto mt-20\">\n    <GridTwoColumns>\n      <div class=\"px-4 sm:px-8\">\n        <HeadlineTwo class=\"text-center\">Pros:</HeadlineTwo>\n        <ParagraphDescription>Affordable Premiums</ParagraphDescription>\n\n        <ParagraphDescription>First Dollar Coverage</ParagraphDescription>\n        <BasicList>\n          <ListItems\n            >You get First Dollar Coverage that covers various procedures while\n            not requiring you to meet a deductible.</ListItems\n          >\n          <ListItems>No Enrollment Period</ListItems>\n          <ListItems\n            >Enrollment is not limited to an enrollment period but can applied\n            for anytime during the year.</ListItems\n          >\n        </BasicList>\n\n        <ParagraphDescription>Customizable</ParagraphDescription>\n        <BasicList>\n          <ListItems\n            >You can customize your plan benefits to cover the things that are\n            most important to you.</ListItems\n          >\n        </BasicList>\n\n        <ParagraphDescription>Direct Payments</ParagraphDescription>\n        <BasicList>\n          <ListItems\n            >Pays directly to a member upon a qualifying incident. Payment is\n            based upon a predetermined schedule of qualifying events.</ListItems\n          >\n        </BasicList>\n      </div>\n      <div class=\"px-4 sm:px-8\">\n        <HeadlineTwo class=\"text-center\">Cons:</HeadlineTwo>\n\n        <ParagraphDescription>Preset Fees</ParagraphDescription>\n        <BasicList>\n          <ListItems\n            >Indemnity plans cover medical procedures at a specific dollar\n            amount. If the medical practitioner charges more than the amount\n            allotted you will be responsible for the difference.</ListItems\n          >\n        </BasicList>\n\n        <ParagraphDescription\n          >Pre-existing condition exclusions</ParagraphDescription\n        >\n        <BasicList>\n          <ListItems\n            >Indemnity plans are subject to underwriting and do not cover\n            Pre-existing conditions. Some plans will cover certain pre-existing\n            conditions after a waiting period.</ListItems\n          >\n        </BasicList>\n\n        <ParagraphDescription>Waiting Periods</ParagraphDescription>\n        <BasicList>\n          <ListItems\n            >Some indemnity plans have waiting periods that must be satisfied\n            before specific conditions such as cancer is covered.</ListItems\n          >\n        </BasicList>\n      </div>\n    </GridTwoColumns>\n  </BasicSection>\n</template>\n\n<script>\nexport default {\n  name: \"TwoColumnSection\",\n  props: {\n    title: String,\n    description: String,\n    mediaFirst: Boolean,\n    subTitle: String,\n  },\n  data() {\n    return {\n      colorMode: useColorMode(),\n    };\n  },\n  computed: {\n    // const isDark = this.$colorMode.value === \"dark\";\n    isDark() {\n      if (this.colorMode.preference === \"dark\") {\n        return true;\n      } else {\n        return false;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n</style>",
      "start": 1761251141453,
      "end": 1761251141786,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1761251141788,
      "end": 1761251141788,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1761251141788,
      "end": 1761251141788,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1761251141788,
      "end": 1761251141788,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1761251141788,
      "end": 1761251141788,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1761251141788,
      "end": 1761251141788,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1761251141788,
      "end": 1761251141788,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1761251141788,
      "end": 1761251141788,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1761251141788,
      "end": 1761251141788,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1761251141788,
      "end": 1761251141788,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1761251141788,
      "end": 1761251141788,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1761251141788,
      "end": 1761251141788,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1761251141788,
      "end": 1761251141788,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\nconst _sfc_main = {\n  name: \"TwoColumnSection\",\n  props: {\n    title: String,\n    description: String,\n    mediaFirst: Boolean,\n    subTitle: String,\n  },\n  data() {\n    return {\n      colorMode: useColorMode(),\n    };\n  },\n  computed: {\n    // const isDark = this.$colorMode.value === \"dark\";\n    isDark() {\n      if (this.colorMode.preference === \"dark\") {\n        return true;\n      } else {\n        return false;\n      }\n    },\n  },\n};\n\nimport { resolveComponent as _resolveComponent, withCtx as _withCtx, createTextVNode as _createTextVNode, createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent } from \"vue/server-renderer\"\n\nfunction _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {\n  const _component_BasicSection = _resolveComponent(\"BasicSection\")\n  const _component_GridTwoColumns = _resolveComponent(\"GridTwoColumns\")\n  const _component_HeadlineTwo = _resolveComponent(\"HeadlineTwo\")\n  const _component_ParagraphDescription = _resolveComponent(\"ParagraphDescription\")\n  const _component_BasicList = _resolveComponent(\"BasicList\")\n  const _component_ListItems = _resolveComponent(\"ListItems\")\n\n  _push(_ssrRenderComponent(_component_BasicSection, _mergeProps({ class: \"container mx-auto mt-20\" }, _attrs), {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(_ssrRenderComponent(_component_GridTwoColumns, null, {\n          default: _withCtx((_, _push, _parent, _scopeId) => {\n            if (_push) {\n              _push(`<div class=\"px-4 sm:px-8\"${_scopeId}>`)\n              _push(_ssrRenderComponent(_component_HeadlineTwo, { class: \"text-center\" }, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(`Pros:`)\n                  } else {\n                    return [\n                      _createTextVNode(\"Pros:\")\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n              _push(_ssrRenderComponent(_component_ParagraphDescription, null, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(`Affordable Premiums`)\n                  } else {\n                    return [\n                      _createTextVNode(\"Affordable Premiums\")\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n              _push(_ssrRenderComponent(_component_ParagraphDescription, null, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(`First Dollar Coverage`)\n                  } else {\n                    return [\n                      _createTextVNode(\"First Dollar Coverage\")\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n              _push(_ssrRenderComponent(_component_BasicList, null, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(_ssrRenderComponent(_component_ListItems, null, {\n                      default: _withCtx((_, _push, _parent, _scopeId) => {\n                        if (_push) {\n                          _push(`You get First Dollar Coverage that covers various procedures while not requiring you to meet a deductible.`)\n                        } else {\n                          return [\n                            _createTextVNode(\"You get First Dollar Coverage that covers various procedures while not requiring you to meet a deductible.\")\n                          ]\n                        }\n                      }),\n                      _: 1\n                    }, _parent, _scopeId))\n                    _push(_ssrRenderComponent(_component_ListItems, null, {\n                      default: _withCtx((_, _push, _parent, _scopeId) => {\n                        if (_push) {\n                          _push(`No Enrollment Period`)\n                        } else {\n                          return [\n                            _createTextVNode(\"No Enrollment Period\")\n                          ]\n                        }\n                      }),\n                      _: 1\n                    }, _parent, _scopeId))\n                    _push(_ssrRenderComponent(_component_ListItems, null, {\n                      default: _withCtx((_, _push, _parent, _scopeId) => {\n                        if (_push) {\n                          _push(`Enrollment is not limited to an enrollment period but can applied for anytime during the year.`)\n                        } else {\n                          return [\n                            _createTextVNode(\"Enrollment is not limited to an enrollment period but can applied for anytime during the year.\")\n                          ]\n                        }\n                      }),\n                      _: 1\n                    }, _parent, _scopeId))\n                  } else {\n                    return [\n                      _createVNode(_component_ListItems, null, {\n                        default: _withCtx(() => [\n                          _createTextVNode(\"You get First Dollar Coverage that covers various procedures while not requiring you to meet a deductible.\")\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_ListItems, null, {\n                        default: _withCtx(() => [\n                          _createTextVNode(\"No Enrollment Period\")\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_ListItems, null, {\n                        default: _withCtx(() => [\n                          _createTextVNode(\"Enrollment is not limited to an enrollment period but can applied for anytime during the year.\")\n                        ]),\n                        _: 1\n                      })\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n              _push(_ssrRenderComponent(_component_ParagraphDescription, null, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(`Customizable`)\n                  } else {\n                    return [\n                      _createTextVNode(\"Customizable\")\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n              _push(_ssrRenderComponent(_component_BasicList, null, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(_ssrRenderComponent(_component_ListItems, null, {\n                      default: _withCtx((_, _push, _parent, _scopeId) => {\n                        if (_push) {\n                          _push(`You can customize your plan benefits to cover the things that are most important to you.`)\n                        } else {\n                          return [\n                            _createTextVNode(\"You can customize your plan benefits to cover the things that are most important to you.\")\n                          ]\n                        }\n                      }),\n                      _: 1\n                    }, _parent, _scopeId))\n                  } else {\n                    return [\n                      _createVNode(_component_ListItems, null, {\n                        default: _withCtx(() => [\n                          _createTextVNode(\"You can customize your plan benefits to cover the things that are most important to you.\")\n                        ]),\n                        _: 1\n                      })\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n              _push(_ssrRenderComponent(_component_ParagraphDescription, null, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(`Direct Payments`)\n                  } else {\n                    return [\n                      _createTextVNode(\"Direct Payments\")\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n              _push(_ssrRenderComponent(_component_BasicList, null, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(_ssrRenderComponent(_component_ListItems, null, {\n                      default: _withCtx((_, _push, _parent, _scopeId) => {\n                        if (_push) {\n                          _push(`Pays directly to a member upon a qualifying incident. Payment is based upon a predetermined schedule of qualifying events.`)\n                        } else {\n                          return [\n                            _createTextVNode(\"Pays directly to a member upon a qualifying incident. Payment is based upon a predetermined schedule of qualifying events.\")\n                          ]\n                        }\n                      }),\n                      _: 1\n                    }, _parent, _scopeId))\n                  } else {\n                    return [\n                      _createVNode(_component_ListItems, null, {\n                        default: _withCtx(() => [\n                          _createTextVNode(\"Pays directly to a member upon a qualifying incident. Payment is based upon a predetermined schedule of qualifying events.\")\n                        ]),\n                        _: 1\n                      })\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n              _push(`</div><div class=\"px-4 sm:px-8\"${_scopeId}>`)\n              _push(_ssrRenderComponent(_component_HeadlineTwo, { class: \"text-center\" }, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(`Cons:`)\n                  } else {\n                    return [\n                      _createTextVNode(\"Cons:\")\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n              _push(_ssrRenderComponent(_component_ParagraphDescription, null, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(`Preset Fees`)\n                  } else {\n                    return [\n                      _createTextVNode(\"Preset Fees\")\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n              _push(_ssrRenderComponent(_component_BasicList, null, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(_ssrRenderComponent(_component_ListItems, null, {\n                      default: _withCtx((_, _push, _parent, _scopeId) => {\n                        if (_push) {\n                          _push(`Indemnity plans cover medical procedures at a specific dollar amount. If the medical practitioner charges more than the amount allotted you will be responsible for the difference.`)\n                        } else {\n                          return [\n                            _createTextVNode(\"Indemnity plans cover medical procedures at a specific dollar amount. If the medical practitioner charges more than the amount allotted you will be responsible for the difference.\")\n                          ]\n                        }\n                      }),\n                      _: 1\n                    }, _parent, _scopeId))\n                  } else {\n                    return [\n                      _createVNode(_component_ListItems, null, {\n                        default: _withCtx(() => [\n                          _createTextVNode(\"Indemnity plans cover medical procedures at a specific dollar amount. If the medical practitioner charges more than the amount allotted you will be responsible for the difference.\")\n                        ]),\n                        _: 1\n                      })\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n              _push(_ssrRenderComponent(_component_ParagraphDescription, null, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(`Pre-existing condition exclusions`)\n                  } else {\n                    return [\n                      _createTextVNode(\"Pre-existing condition exclusions\")\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n              _push(_ssrRenderComponent(_component_BasicList, null, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(_ssrRenderComponent(_component_ListItems, null, {\n                      default: _withCtx((_, _push, _parent, _scopeId) => {\n                        if (_push) {\n                          _push(`Indemnity plans are subject to underwriting and do not cover Pre-existing conditions. Some plans will cover certain pre-existing conditions after a waiting period.`)\n                        } else {\n                          return [\n                            _createTextVNode(\"Indemnity plans are subject to underwriting and do not cover Pre-existing conditions. Some plans will cover certain pre-existing conditions after a waiting period.\")\n                          ]\n                        }\n                      }),\n                      _: 1\n                    }, _parent, _scopeId))\n                  } else {\n                    return [\n                      _createVNode(_component_ListItems, null, {\n                        default: _withCtx(() => [\n                          _createTextVNode(\"Indemnity plans are subject to underwriting and do not cover Pre-existing conditions. Some plans will cover certain pre-existing conditions after a waiting period.\")\n                        ]),\n                        _: 1\n                      })\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n              _push(_ssrRenderComponent(_component_ParagraphDescription, null, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(`Waiting Periods`)\n                  } else {\n                    return [\n                      _createTextVNode(\"Waiting Periods\")\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n              _push(_ssrRenderComponent(_component_BasicList, null, {\n                default: _withCtx((_, _push, _parent, _scopeId) => {\n                  if (_push) {\n                    _push(_ssrRenderComponent(_component_ListItems, null, {\n                      default: _withCtx((_, _push, _parent, _scopeId) => {\n                        if (_push) {\n                          _push(`Some indemnity plans have waiting periods that must be satisfied before specific conditions such as cancer is covered.`)\n                        } else {\n                          return [\n                            _createTextVNode(\"Some indemnity plans have waiting periods that must be satisfied before specific conditions such as cancer is covered.\")\n                          ]\n                        }\n                      }),\n                      _: 1\n                    }, _parent, _scopeId))\n                  } else {\n                    return [\n                      _createVNode(_component_ListItems, null, {\n                        default: _withCtx(() => [\n                          _createTextVNode(\"Some indemnity plans have waiting periods that must be satisfied before specific conditions such as cancer is covered.\")\n                        ]),\n                        _: 1\n                      })\n                    ]\n                  }\n                }),\n                _: 1\n              }, _parent, _scopeId))\n              _push(`</div>`)\n            } else {\n              return [\n                _createVNode(\"div\", { class: \"px-4 sm:px-8\" }, [\n                  _createVNode(_component_HeadlineTwo, { class: \"text-center\" }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\"Pros:\")\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_ParagraphDescription, null, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\"Affordable Premiums\")\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_ParagraphDescription, null, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\"First Dollar Coverage\")\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_BasicList, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_ListItems, null, {\n                        default: _withCtx(() => [\n                          _createTextVNode(\"You get First Dollar Coverage that covers various procedures while not requiring you to meet a deductible.\")\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_ListItems, null, {\n                        default: _withCtx(() => [\n                          _createTextVNode(\"No Enrollment Period\")\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_ListItems, null, {\n                        default: _withCtx(() => [\n                          _createTextVNode(\"Enrollment is not limited to an enrollment period but can applied for anytime during the year.\")\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_ParagraphDescription, null, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\"Customizable\")\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_BasicList, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_ListItems, null, {\n                        default: _withCtx(() => [\n                          _createTextVNode(\"You can customize your plan benefits to cover the things that are most important to you.\")\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_ParagraphDescription, null, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\"Direct Payments\")\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_BasicList, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_ListItems, null, {\n                        default: _withCtx(() => [\n                          _createTextVNode(\"Pays directly to a member upon a qualifying incident. Payment is based upon a predetermined schedule of qualifying events.\")\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _createVNode(\"div\", { class: \"px-4 sm:px-8\" }, [\n                  _createVNode(_component_HeadlineTwo, { class: \"text-center\" }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\"Cons:\")\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_ParagraphDescription, null, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\"Preset Fees\")\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_BasicList, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_ListItems, null, {\n                        default: _withCtx(() => [\n                          _createTextVNode(\"Indemnity plans cover medical procedures at a specific dollar amount. If the medical practitioner charges more than the amount allotted you will be responsible for the difference.\")\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_ParagraphDescription, null, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\"Pre-existing condition exclusions\")\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_BasicList, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_ListItems, null, {\n                        default: _withCtx(() => [\n                          _createTextVNode(\"Indemnity plans are subject to underwriting and do not cover Pre-existing conditions. Some plans will cover certain pre-existing conditions after a waiting period.\")\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_ParagraphDescription, null, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\"Waiting Periods\")\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_BasicList, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_ListItems, null, {\n                        default: _withCtx(() => [\n                          _createTextVNode(\"Some indemnity plans have waiting periods that must be satisfied before specific conditions such as cancer is covered.\")\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  })\n                ])\n              ]\n            }\n          }),\n          _: 1\n        }, _parent, _scopeId))\n      } else {\n        return [\n          _createVNode(_component_GridTwoColumns, null, {\n            default: _withCtx(() => [\n              _createVNode(\"div\", { class: \"px-4 sm:px-8\" }, [\n                _createVNode(_component_HeadlineTwo, { class: \"text-center\" }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"Pros:\")\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ParagraphDescription, null, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"Affordable Premiums\")\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ParagraphDescription, null, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"First Dollar Coverage\")\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_BasicList, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ListItems, null, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"You get First Dollar Coverage that covers various procedures while not requiring you to meet a deductible.\")\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_component_ListItems, null, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"No Enrollment Period\")\n                      ]),\n                      _: 1\n                    }),\n                    _createVNode(_component_ListItems, null, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"Enrollment is not limited to an enrollment period but can applied for anytime during the year.\")\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ParagraphDescription, null, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"Customizable\")\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_BasicList, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ListItems, null, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"You can customize your plan benefits to cover the things that are most important to you.\")\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ParagraphDescription, null, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"Direct Payments\")\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_BasicList, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ListItems, null, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"Pays directly to a member upon a qualifying incident. Payment is based upon a predetermined schedule of qualifying events.\")\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _createVNode(\"div\", { class: \"px-4 sm:px-8\" }, [\n                _createVNode(_component_HeadlineTwo, { class: \"text-center\" }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"Cons:\")\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ParagraphDescription, null, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"Preset Fees\")\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_BasicList, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ListItems, null, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"Indemnity plans cover medical procedures at a specific dollar amount. If the medical practitioner charges more than the amount allotted you will be responsible for the difference.\")\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ParagraphDescription, null, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"Pre-existing condition exclusions\")\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_BasicList, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ListItems, null, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"Indemnity plans are subject to underwriting and do not cover Pre-existing conditions. Some plans will cover certain pre-existing conditions after a waiting period.\")\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_ParagraphDescription, null, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"Waiting Periods\")\n                  ]),\n                  _: 1\n                }),\n                _createVNode(_component_BasicList, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_ListItems, null, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"Some indemnity plans have waiting periods that must be satisfied before specific conditions such as cancer is covered.\")\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                })\n              ])\n            ]),\n            _: 1\n          })\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n}\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/sections/IndividualAndFamilyInsurancePage/IndemnityProsAndCons.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['ssrRender',_sfc_ssrRender]])",
      "start": 1761251141788,
      "end": 1761251141797,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": "/Users/amerusfinancial/Desktop/projects/Amerus/app/components/sections/IndividualAndFamilyInsurancePage/IndemnityProsAndCons.vue",
        "names": [],
        "sources": [
          "/Users/amerusfinancial/Desktop/projects/Amerus/app/components/sections/IndividualAndFamilyInsurancePage/IndemnityProsAndCons.vue"
        ],
        "sourcesContent": [
          "<template>\n  <BasicSection class=\"container mx-auto mt-20\">\n    <GridTwoColumns>\n      <div class=\"px-4 sm:px-8\">\n        <HeadlineTwo class=\"text-center\">Pros:</HeadlineTwo>\n        <ParagraphDescription>Affordable Premiums</ParagraphDescription>\n\n        <ParagraphDescription>First Dollar Coverage</ParagraphDescription>\n        <BasicList>\n          <ListItems\n            >You get First Dollar Coverage that covers various procedures while\n            not requiring you to meet a deductible.</ListItems\n          >\n          <ListItems>No Enrollment Period</ListItems>\n          <ListItems\n            >Enrollment is not limited to an enrollment period but can applied\n            for anytime during the year.</ListItems\n          >\n        </BasicList>\n\n        <ParagraphDescription>Customizable</ParagraphDescription>\n        <BasicList>\n          <ListItems\n            >You can customize your plan benefits to cover the things that are\n            most important to you.</ListItems\n          >\n        </BasicList>\n\n        <ParagraphDescription>Direct Payments</ParagraphDescription>\n        <BasicList>\n          <ListItems\n            >Pays directly to a member upon a qualifying incident. Payment is\n            based upon a predetermined schedule of qualifying events.</ListItems\n          >\n        </BasicList>\n      </div>\n      <div class=\"px-4 sm:px-8\">\n        <HeadlineTwo class=\"text-center\">Cons:</HeadlineTwo>\n\n        <ParagraphDescription>Preset Fees</ParagraphDescription>\n        <BasicList>\n          <ListItems\n            >Indemnity plans cover medical procedures at a specific dollar\n            amount. If the medical practitioner charges more than the amount\n            allotted you will be responsible for the difference.</ListItems\n          >\n        </BasicList>\n\n        <ParagraphDescription\n          >Pre-existing condition exclusions</ParagraphDescription\n        >\n        <BasicList>\n          <ListItems\n            >Indemnity plans are subject to underwriting and do not cover\n            Pre-existing conditions. Some plans will cover certain pre-existing\n            conditions after a waiting period.</ListItems\n          >\n        </BasicList>\n\n        <ParagraphDescription>Waiting Periods</ParagraphDescription>\n        <BasicList>\n          <ListItems\n            >Some indemnity plans have waiting periods that must be satisfied\n            before specific conditions such as cancer is covered.</ListItems\n          >\n        </BasicList>\n      </div>\n    </GridTwoColumns>\n  </BasicSection>\n</template>\n\n<script>\nexport default {\n  name: \"TwoColumnSection\",\n  props: {\n    title: String,\n    description: String,\n    mediaFirst: Boolean,\n    subTitle: String,\n  },\n  data() {\n    return {\n      colorMode: useColorMode(),\n    };\n  },\n  computed: {\n    // const isDark = this.$colorMode.value === \"dark\";\n    isDark() {\n      if (this.colorMode.preference === \"dark\") {\n        return true;\n      } else {\n        return false;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n</style>"
        ],
        "mappings": "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"
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1761251141797,
      "end": 1761251141797,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1761251141797,
      "end": 1761251141797,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1761251141797,
      "end": 1761251141797,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1761251141797,
      "end": 1761251141797,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1761251141797,
      "end": 1761251141797,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "result": "import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => import(\"/Users/amerusfinancial/Desktop/projects/Amerus/app/components/sections/IndividualAndFamilyInsurancePage/IndemnityProsAndCons.vue\").then(r => r.default))",
      "start": 1761251141797,
      "end": 1761251141797,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "replace",
      "start": 1761251141797,
      "end": 1761251141797,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1761251141797,
      "end": 1761251141797,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1761251141797,
      "end": 1761251141797,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1761251141797,
      "end": 1761251141797,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1761251141797,
      "end": 1761251141797,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1761251141797,
      "end": 1761251141797,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1761251141797,
      "end": 1761251141797,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1761251141797,
      "end": 1761251141797,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1761251141797,
      "end": 1761251141798,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1761251141798,
      "end": 1761251141798,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1761251141798,
      "end": 1761251141798,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1761251141798,
      "end": 1761251141798,
      "order": "post"
    },
    {
      "name": "unhead:remove-server-composables",
      "start": 1761251141798,
      "end": 1761251141798,
      "order": "post"
    },
    {
      "name": "unhead:use-seo-meta-transform",
      "start": 1761251141798,
      "end": 1761251141798,
      "order": "post"
    },
    {
      "name": "unhead:use-seo-meta-transform",
      "start": 1761251141798,
      "end": 1761251141798,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1761251141798,
      "end": 1761251141798,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1761251141798,
      "end": 1761251141798,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1761251141798,
      "end": 1761251141798,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1761251141798,
      "end": 1761251141798,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1761251141798,
      "end": 1761251141798,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1761251141798,
      "end": 1761251141798,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1761251141798,
      "end": 1761251141798,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1761251141798,
      "end": 1761251141798,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1761251141798,
      "end": 1761251141799,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1761251141799,
      "end": 1761251141799,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1761251141799,
      "end": 1761251141799,
      "order": "normal"
    }
  ]
}
