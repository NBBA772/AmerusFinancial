{
  "resolvedId": "/Users/amerusfinancial/Desktop/projects/Amerus/app/composables/useStableSEO.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * Stable Advanced SEO Composables without external dependencies\n * Provides enhanced SEO features using only built-in browser APIs\n */\n\n/**\n * Enhanced meta tags for better search performance\n */\nexport const useEnhancedMetaTags = () => {\n  useHead({\n    meta: [\n      // Enhanced crawling directives\n      { name: 'robots', content: 'index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1' },\n      { name: 'googlebot', content: 'index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1' },\n      { name: 'bingbot', content: 'index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1' },\n      \n      // Social media optimization\n      { name: 'twitter:site', content: '@amerusfinancial' },\n      { name: 'twitter:creator', content: '@amerusfinancial' },\n      \n      // Technical SEO\n      { name: 'format-detection', content: 'telephone=no' },\n      { name: 'theme-color', content: '#30BCFE' },\n      \n      // Security headers\n      { 'http-equiv': 'X-Content-Type-Options', content: 'nosniff' },\n      { 'http-equiv': 'X-Frame-Options', content: 'SAMEORIGIN' },\n      { 'http-equiv': 'X-XSS-Protection', content: '1; mode=block' }\n    ],\n    \n    link: [\n      // DNS prefetch for performance\n      { rel: 'dns-prefetch', href: '//fonts.googleapis.com' },\n      { rel: 'dns-prefetch', href: '//www.google-analytics.com' },\n      { rel: 'dns-prefetch', href: '//connect.facebook.net' },\n      \n      // Preconnect for critical resources\n      { rel: 'preconnect', href: 'https://fonts.gstatic.com', crossorigin: '' }\n    ]\n  })\n}\n\n/**\n * Creates priority hints for critical resources\n */\nexport const useResourceHints = (criticalImages: string[] = []) => {\n  const links: any[] = [\n    // Preload critical fonts\n    { rel: 'preload', as: 'font', type: 'font/woff2', href: '/fonts/inter-var.woff2', crossorigin: '' }\n  ]\n  \n  // Add critical images\n  criticalImages.forEach(image => {\n    links.push({ rel: 'preload', as: 'image', href: image })\n  })\n  \n  useHead({ link: links })\n}\n\n/**\n * Enhanced social meta for better sharing\n */\nexport const useSocialMeta = (data: {\n  title: string\n  description: string\n  image: string\n  url: string\n  type?: string\n}) => {\n  useSeoMeta({\n    // Enhanced Open Graph\n    ogType: (data.type as any) || 'website',\n    ogLocale: 'en_US',\n    ogSiteName: 'Amerus Financial',\n    \n    // Enhanced Twitter\n    twitterSite: '@amerusfinancial',\n    twitterCreator: '@amerusfinancial',\n    \n    // Additional optimization\n    robots: 'index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1'\n  })\n}\n\n/**\n * Creates Review/Rating schema for products/services\n */\nexport const useReviewSchema = (reviews: Array<{\n  author: string\n  rating: number\n  review: string\n  date: string\n}>) => {\n  const reviewSchemas = reviews.map(review => ({\n    '@type': 'Review',\n    reviewRating: {\n      '@type': 'Rating',\n      ratingValue: review.rating.toString(),\n      bestRating: '5'\n    },\n    author: {\n      '@type': 'Person',\n      name: review.author\n    },\n    reviewBody: review.review,\n    datePublished: review.date\n  }))\n\n  const avgRating = reviews.reduce((sum, review) => sum + review.rating, 0) / reviews.length\n\n  return {\n    aggregateRating: {\n      '@type': 'AggregateRating',\n      ratingValue: avgRating.toFixed(1),\n      reviewCount: reviews.length.toString(),\n      bestRating: '5',\n      worstRating: '1'\n    },\n    review: reviewSchemas\n  }\n}\n\n/**\n * Creates HowTo schema for step-by-step processes\n */\nexport const useHowToSchema = (steps: Array<{\n  name: string\n  text: string\n  image?: string\n}>, title: string, description: string, totalTime?: string, cost?: string) => {\n  return {\n    '@type': 'HowTo',\n    name: title,\n    description: description,\n    totalTime: totalTime || 'PT15M',\n    ...(cost && {\n      estimatedCost: {\n        '@type': 'MonetaryAmount',\n        currency: 'USD',\n        value: cost\n      }\n    }),\n    step: steps.map(step => ({\n      '@type': 'HowToStep',\n      name: step.name,\n      text: step.text,\n      ...(step.image && { image: step.image })\n    }))\n  }\n}\n\n/**\n * Simple performance monitoring using native APIs\n */\nexport const usePerformanceMonitoring = () => {\n  if (process.client) {\n    // Monitor page load performance\n    window.addEventListener('load', () => {\n      setTimeout(() => {\n        const perfData = performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming\n        if (perfData) {\n          console.log('Page Load Performance:', {\n            'DNS Lookup': perfData.domainLookupEnd - perfData.domainLookupStart,\n            'TCP Connection': perfData.connectEnd - perfData.connectStart,\n            'First Byte': perfData.responseStart - perfData.requestStart,\n            'DOM Loading': perfData.domContentLoadedEventEnd - perfData.responseStart,\n            'Total Load Time': perfData.loadEventEnd - perfData.fetchStart\n          })\n        }\n      }, 100)\n    })\n  }\n}\n\n/**\n * Main composable that provides all stable SEO functionality\n * This is the primary export that matches the expected interface\n */\nexport const useStableSEO = () => {\n  // Enhanced meta tags for better search performance\n  const enhancedMetaTags = {\n    meta: [\n      // Enhanced crawling directives\n      { name: 'robots', content: 'index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1' },\n      { name: 'googlebot', content: 'index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1' },\n      { name: 'bingbot', content: 'index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1' },\n      \n      // Social media optimization\n      { name: 'twitter:site', content: '@amerusfinancial' },\n      { name: 'twitter:creator', content: '@amerusfinancial' },\n      \n      // Technical SEO\n      { name: 'format-detection', content: 'telephone=no' },\n      { name: 'theme-color', content: '#30BCFE' },\n      \n      // Security headers\n      { 'http-equiv': 'X-Content-Type-Options', content: 'nosniff' },\n      { 'http-equiv': 'X-Frame-Options', content: 'SAMEORIGIN' },\n      { 'http-equiv': 'X-XSS-Protection', content: '1; mode=block' }\n    ],\n    \n    link: [\n      // DNS prefetch for performance\n      { rel: 'dns-prefetch', href: '//fonts.googleapis.com' },\n      { rel: 'dns-prefetch', href: '//www.google-analytics.com' },\n      { rel: 'dns-prefetch', href: '//connect.facebook.net' },\n      \n      // Preconnect for critical resources\n      { rel: 'preconnect', href: 'https://fonts.gstatic.com', crossorigin: '' }\n    ]\n  }\n\n  // Creates priority hints for critical resources\n  const resourceHints = (criticalImages: string[] = []) => {\n    const links: any[] = [\n      // Preload critical fonts\n      { rel: 'preload', as: 'font', type: 'font/woff2', href: '/fonts/inter-var.woff2', crossorigin: '' }\n    ]\n    \n    // Add critical images\n    criticalImages.forEach(image => {\n      links.push({ rel: 'preload', as: 'image', href: image })\n    })\n    \n    return { link: links }\n  }\n\n  // Creates Review/Rating schema for products/services\n  const reviewSchema = (name: string, description: string, reviews: Array<{\n    author: string\n    rating: number\n    text: string\n  }>) => {\n    const avgRating = reviews.reduce((sum, review) => sum + review.rating, 0) / reviews.length\n\n    return {\n      '@type': 'Service',\n      name: name,\n      description: description,\n      aggregateRating: {\n        '@type': 'AggregateRating',\n        ratingValue: avgRating.toFixed(1),\n        reviewCount: reviews.length.toString(),\n        bestRating: '5',\n        worstRating: '1'\n      },\n      review: reviews.map(review => ({\n        '@type': 'Review',\n        reviewRating: {\n          '@type': 'Rating',\n          ratingValue: review.rating.toString(),\n          bestRating: '5'\n        },\n        author: {\n          '@type': 'Person',\n          name: review.author\n        },\n        reviewBody: review.text\n      }))\n    }\n  }\n\n  // Creates HowTo schema for step-by-step processes\n  const howToSchema = (title: string, description: string, image: string, totalTime: number, steps: Array<{\n    name: string\n    text: string\n  }>) => {\n    return {\n      '@type': 'HowTo',\n      name: title,\n      description: description,\n      image: image,\n      totalTime: `PT${totalTime}M`,\n      step: steps.map((step, index) => ({\n        '@type': 'HowToStep',\n        position: index + 1,\n        name: step.name,\n        text: step.text\n      }))\n    }\n  }\n\n  return {\n    enhancedMetaTags,\n    resourceHints,\n    reviewSchema,\n    howToSchema,\n    usePerformanceMonitoring\n  }\n}",
      "start": 1761251030370,
      "end": 1761251034178,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1761251034178,
      "end": 1761251034178,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1761251034178,
      "end": 1761251034178,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1761251034178,
      "end": 1761251034178,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1761251034178,
      "end": 1761251034178,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1761251034178,
      "end": 1761251034178,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "export const useEnhancedMetaTags = () => {\n  useHead({\n    meta: [\n      // Enhanced crawling directives\n      { name: \"robots\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      { name: \"googlebot\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      { name: \"bingbot\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      // Social media optimization\n      { name: \"twitter:site\", content: \"@amerusfinancial\" },\n      { name: \"twitter:creator\", content: \"@amerusfinancial\" },\n      // Technical SEO\n      { name: \"format-detection\", content: \"telephone=no\" },\n      { name: \"theme-color\", content: \"#30BCFE\" },\n      // Security headers\n      { \"http-equiv\": \"X-Content-Type-Options\", content: \"nosniff\" },\n      { \"http-equiv\": \"X-Frame-Options\", content: \"SAMEORIGIN\" },\n      { \"http-equiv\": \"X-XSS-Protection\", content: \"1; mode=block\" }\n    ],\n    link: [\n      // DNS prefetch for performance\n      { rel: \"dns-prefetch\", href: \"//fonts.googleapis.com\" },\n      { rel: \"dns-prefetch\", href: \"//www.google-analytics.com\" },\n      { rel: \"dns-prefetch\", href: \"//connect.facebook.net\" },\n      // Preconnect for critical resources\n      { rel: \"preconnect\", href: \"https://fonts.gstatic.com\", crossorigin: \"\" }\n    ]\n  });\n};\nexport const useResourceHints = (criticalImages = []) => {\n  const links = [\n    // Preload critical fonts\n    { rel: \"preload\", as: \"font\", type: \"font/woff2\", href: \"/fonts/inter-var.woff2\", crossorigin: \"\" }\n  ];\n  criticalImages.forEach((image) => {\n    links.push({ rel: \"preload\", as: \"image\", href: image });\n  });\n  useHead({ link: links });\n};\nexport const useSocialMeta = (data) => {\n  useSeoMeta({\n    // Enhanced Open Graph\n    ogType: data.type || \"website\",\n    ogLocale: \"en_US\",\n    ogSiteName: \"Amerus Financial\",\n    // Enhanced Twitter\n    twitterSite: \"@amerusfinancial\",\n    twitterCreator: \"@amerusfinancial\",\n    // Additional optimization\n    robots: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\"\n  });\n};\nexport const useReviewSchema = (reviews) => {\n  const reviewSchemas = reviews.map((review) => ({\n    \"@type\": \"Review\",\n    reviewRating: {\n      \"@type\": \"Rating\",\n      ratingValue: review.rating.toString(),\n      bestRating: \"5\"\n    },\n    author: {\n      \"@type\": \"Person\",\n      name: review.author\n    },\n    reviewBody: review.review,\n    datePublished: review.date\n  }));\n  const avgRating = reviews.reduce((sum, review) => sum + review.rating, 0) / reviews.length;\n  return {\n    aggregateRating: {\n      \"@type\": \"AggregateRating\",\n      ratingValue: avgRating.toFixed(1),\n      reviewCount: reviews.length.toString(),\n      bestRating: \"5\",\n      worstRating: \"1\"\n    },\n    review: reviewSchemas\n  };\n};\nexport const useHowToSchema = (steps, title, description, totalTime, cost) => {\n  return {\n    \"@type\": \"HowTo\",\n    name: title,\n    description,\n    totalTime: totalTime || \"PT15M\",\n    ...cost && {\n      estimatedCost: {\n        \"@type\": \"MonetaryAmount\",\n        currency: \"USD\",\n        value: cost\n      }\n    },\n    step: steps.map((step) => ({\n      \"@type\": \"HowToStep\",\n      name: step.name,\n      text: step.text,\n      ...step.image && { image: step.image }\n    }))\n  };\n};\nexport const usePerformanceMonitoring = () => {\n  if (process.client) {\n    window.addEventListener(\"load\", () => {\n      setTimeout(() => {\n        const perfData = performance.getEntriesByType(\"navigation\")[0];\n        if (perfData) {\n          console.log(\"Page Load Performance:\", {\n            \"DNS Lookup\": perfData.domainLookupEnd - perfData.domainLookupStart,\n            \"TCP Connection\": perfData.connectEnd - perfData.connectStart,\n            \"First Byte\": perfData.responseStart - perfData.requestStart,\n            \"DOM Loading\": perfData.domContentLoadedEventEnd - perfData.responseStart,\n            \"Total Load Time\": perfData.loadEventEnd - perfData.fetchStart\n          });\n        }\n      }, 100);\n    });\n  }\n};\nexport const useStableSEO = () => {\n  const enhancedMetaTags = {\n    meta: [\n      // Enhanced crawling directives\n      { name: \"robots\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      { name: \"googlebot\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      { name: \"bingbot\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      // Social media optimization\n      { name: \"twitter:site\", content: \"@amerusfinancial\" },\n      { name: \"twitter:creator\", content: \"@amerusfinancial\" },\n      // Technical SEO\n      { name: \"format-detection\", content: \"telephone=no\" },\n      { name: \"theme-color\", content: \"#30BCFE\" },\n      // Security headers\n      { \"http-equiv\": \"X-Content-Type-Options\", content: \"nosniff\" },\n      { \"http-equiv\": \"X-Frame-Options\", content: \"SAMEORIGIN\" },\n      { \"http-equiv\": \"X-XSS-Protection\", content: \"1; mode=block\" }\n    ],\n    link: [\n      // DNS prefetch for performance\n      { rel: \"dns-prefetch\", href: \"//fonts.googleapis.com\" },\n      { rel: \"dns-prefetch\", href: \"//www.google-analytics.com\" },\n      { rel: \"dns-prefetch\", href: \"//connect.facebook.net\" },\n      // Preconnect for critical resources\n      { rel: \"preconnect\", href: \"https://fonts.gstatic.com\", crossorigin: \"\" }\n    ]\n  };\n  const resourceHints = (criticalImages = []) => {\n    const links = [\n      // Preload critical fonts\n      { rel: \"preload\", as: \"font\", type: \"font/woff2\", href: \"/fonts/inter-var.woff2\", crossorigin: \"\" }\n    ];\n    criticalImages.forEach((image) => {\n      links.push({ rel: \"preload\", as: \"image\", href: image });\n    });\n    return { link: links };\n  };\n  const reviewSchema = (name, description, reviews) => {\n    const avgRating = reviews.reduce((sum, review) => sum + review.rating, 0) / reviews.length;\n    return {\n      \"@type\": \"Service\",\n      name,\n      description,\n      aggregateRating: {\n        \"@type\": \"AggregateRating\",\n        ratingValue: avgRating.toFixed(1),\n        reviewCount: reviews.length.toString(),\n        bestRating: \"5\",\n        worstRating: \"1\"\n      },\n      review: reviews.map((review) => ({\n        \"@type\": \"Review\",\n        reviewRating: {\n          \"@type\": \"Rating\",\n          ratingValue: review.rating.toString(),\n          bestRating: \"5\"\n        },\n        author: {\n          \"@type\": \"Person\",\n          name: review.author\n        },\n        reviewBody: review.text\n      }))\n    };\n  };\n  const howToSchema = (title, description, image, totalTime, steps) => {\n    return {\n      \"@type\": \"HowTo\",\n      name: title,\n      description,\n      image,\n      totalTime: `PT${totalTime}M`,\n      step: steps.map((step, index) => ({\n        \"@type\": \"HowToStep\",\n        position: index + 1,\n        name: step.name,\n        text: step.text\n      }))\n    };\n  };\n  return {\n    enhancedMetaTags,\n    resourceHints,\n    reviewSchema,\n    howToSchema,\n    usePerformanceMonitoring\n  };\n};\n",
      "start": 1761251034178,
      "end": 1761251034998,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/amerusfinancial/Desktop/projects/Amerus/app/composables/useStableSEO.ts"
        ],
        "sourcesContent": [
          "/**\n * Stable Advanced SEO Composables without external dependencies\n * Provides enhanced SEO features using only built-in browser APIs\n */\n\n/**\n * Enhanced meta tags for better search performance\n */\nexport const useEnhancedMetaTags = () => {\n  useHead({\n    meta: [\n      // Enhanced crawling directives\n      { name: 'robots', content: 'index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1' },\n      { name: 'googlebot', content: 'index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1' },\n      { name: 'bingbot', content: 'index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1' },\n      \n      // Social media optimization\n      { name: 'twitter:site', content: '@amerusfinancial' },\n      { name: 'twitter:creator', content: '@amerusfinancial' },\n      \n      // Technical SEO\n      { name: 'format-detection', content: 'telephone=no' },\n      { name: 'theme-color', content: '#30BCFE' },\n      \n      // Security headers\n      { 'http-equiv': 'X-Content-Type-Options', content: 'nosniff' },\n      { 'http-equiv': 'X-Frame-Options', content: 'SAMEORIGIN' },\n      { 'http-equiv': 'X-XSS-Protection', content: '1; mode=block' }\n    ],\n    \n    link: [\n      // DNS prefetch for performance\n      { rel: 'dns-prefetch', href: '//fonts.googleapis.com' },\n      { rel: 'dns-prefetch', href: '//www.google-analytics.com' },\n      { rel: 'dns-prefetch', href: '//connect.facebook.net' },\n      \n      // Preconnect for critical resources\n      { rel: 'preconnect', href: 'https://fonts.gstatic.com', crossorigin: '' }\n    ]\n  })\n}\n\n/**\n * Creates priority hints for critical resources\n */\nexport const useResourceHints = (criticalImages: string[] = []) => {\n  const links: any[] = [\n    // Preload critical fonts\n    { rel: 'preload', as: 'font', type: 'font/woff2', href: '/fonts/inter-var.woff2', crossorigin: '' }\n  ]\n  \n  // Add critical images\n  criticalImages.forEach(image => {\n    links.push({ rel: 'preload', as: 'image', href: image })\n  })\n  \n  useHead({ link: links })\n}\n\n/**\n * Enhanced social meta for better sharing\n */\nexport const useSocialMeta = (data: {\n  title: string\n  description: string\n  image: string\n  url: string\n  type?: string\n}) => {\n  useSeoMeta({\n    // Enhanced Open Graph\n    ogType: (data.type as any) || 'website',\n    ogLocale: 'en_US',\n    ogSiteName: 'Amerus Financial',\n    \n    // Enhanced Twitter\n    twitterSite: '@amerusfinancial',\n    twitterCreator: '@amerusfinancial',\n    \n    // Additional optimization\n    robots: 'index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1'\n  })\n}\n\n/**\n * Creates Review/Rating schema for products/services\n */\nexport const useReviewSchema = (reviews: Array<{\n  author: string\n  rating: number\n  review: string\n  date: string\n}>) => {\n  const reviewSchemas = reviews.map(review => ({\n    '@type': 'Review',\n    reviewRating: {\n      '@type': 'Rating',\n      ratingValue: review.rating.toString(),\n      bestRating: '5'\n    },\n    author: {\n      '@type': 'Person',\n      name: review.author\n    },\n    reviewBody: review.review,\n    datePublished: review.date\n  }))\n\n  const avgRating = reviews.reduce((sum, review) => sum + review.rating, 0) / reviews.length\n\n  return {\n    aggregateRating: {\n      '@type': 'AggregateRating',\n      ratingValue: avgRating.toFixed(1),\n      reviewCount: reviews.length.toString(),\n      bestRating: '5',\n      worstRating: '1'\n    },\n    review: reviewSchemas\n  }\n}\n\n/**\n * Creates HowTo schema for step-by-step processes\n */\nexport const useHowToSchema = (steps: Array<{\n  name: string\n  text: string\n  image?: string\n}>, title: string, description: string, totalTime?: string, cost?: string) => {\n  return {\n    '@type': 'HowTo',\n    name: title,\n    description: description,\n    totalTime: totalTime || 'PT15M',\n    ...(cost && {\n      estimatedCost: {\n        '@type': 'MonetaryAmount',\n        currency: 'USD',\n        value: cost\n      }\n    }),\n    step: steps.map(step => ({\n      '@type': 'HowToStep',\n      name: step.name,\n      text: step.text,\n      ...(step.image && { image: step.image })\n    }))\n  }\n}\n\n/**\n * Simple performance monitoring using native APIs\n */\nexport const usePerformanceMonitoring = () => {\n  if (process.client) {\n    // Monitor page load performance\n    window.addEventListener('load', () => {\n      setTimeout(() => {\n        const perfData = performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming\n        if (perfData) {\n          console.log('Page Load Performance:', {\n            'DNS Lookup': perfData.domainLookupEnd - perfData.domainLookupStart,\n            'TCP Connection': perfData.connectEnd - perfData.connectStart,\n            'First Byte': perfData.responseStart - perfData.requestStart,\n            'DOM Loading': perfData.domContentLoadedEventEnd - perfData.responseStart,\n            'Total Load Time': perfData.loadEventEnd - perfData.fetchStart\n          })\n        }\n      }, 100)\n    })\n  }\n}\n\n/**\n * Main composable that provides all stable SEO functionality\n * This is the primary export that matches the expected interface\n */\nexport const useStableSEO = () => {\n  // Enhanced meta tags for better search performance\n  const enhancedMetaTags = {\n    meta: [\n      // Enhanced crawling directives\n      { name: 'robots', content: 'index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1' },\n      { name: 'googlebot', content: 'index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1' },\n      { name: 'bingbot', content: 'index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1' },\n      \n      // Social media optimization\n      { name: 'twitter:site', content: '@amerusfinancial' },\n      { name: 'twitter:creator', content: '@amerusfinancial' },\n      \n      // Technical SEO\n      { name: 'format-detection', content: 'telephone=no' },\n      { name: 'theme-color', content: '#30BCFE' },\n      \n      // Security headers\n      { 'http-equiv': 'X-Content-Type-Options', content: 'nosniff' },\n      { 'http-equiv': 'X-Frame-Options', content: 'SAMEORIGIN' },\n      { 'http-equiv': 'X-XSS-Protection', content: '1; mode=block' }\n    ],\n    \n    link: [\n      // DNS prefetch for performance\n      { rel: 'dns-prefetch', href: '//fonts.googleapis.com' },\n      { rel: 'dns-prefetch', href: '//www.google-analytics.com' },\n      { rel: 'dns-prefetch', href: '//connect.facebook.net' },\n      \n      // Preconnect for critical resources\n      { rel: 'preconnect', href: 'https://fonts.gstatic.com', crossorigin: '' }\n    ]\n  }\n\n  // Creates priority hints for critical resources\n  const resourceHints = (criticalImages: string[] = []) => {\n    const links: any[] = [\n      // Preload critical fonts\n      { rel: 'preload', as: 'font', type: 'font/woff2', href: '/fonts/inter-var.woff2', crossorigin: '' }\n    ]\n    \n    // Add critical images\n    criticalImages.forEach(image => {\n      links.push({ rel: 'preload', as: 'image', href: image })\n    })\n    \n    return { link: links }\n  }\n\n  // Creates Review/Rating schema for products/services\n  const reviewSchema = (name: string, description: string, reviews: Array<{\n    author: string\n    rating: number\n    text: string\n  }>) => {\n    const avgRating = reviews.reduce((sum, review) => sum + review.rating, 0) / reviews.length\n\n    return {\n      '@type': 'Service',\n      name: name,\n      description: description,\n      aggregateRating: {\n        '@type': 'AggregateRating',\n        ratingValue: avgRating.toFixed(1),\n        reviewCount: reviews.length.toString(),\n        bestRating: '5',\n        worstRating: '1'\n      },\n      review: reviews.map(review => ({\n        '@type': 'Review',\n        reviewRating: {\n          '@type': 'Rating',\n          ratingValue: review.rating.toString(),\n          bestRating: '5'\n        },\n        author: {\n          '@type': 'Person',\n          name: review.author\n        },\n        reviewBody: review.text\n      }))\n    }\n  }\n\n  // Creates HowTo schema for step-by-step processes\n  const howToSchema = (title: string, description: string, image: string, totalTime: number, steps: Array<{\n    name: string\n    text: string\n  }>) => {\n    return {\n      '@type': 'HowTo',\n      name: title,\n      description: description,\n      image: image,\n      totalTime: `PT${totalTime}M`,\n      step: steps.map((step, index) => ({\n        '@type': 'HowToStep',\n        position: index + 1,\n        name: step.name,\n        text: step.text\n      }))\n    }\n  }\n\n  return {\n    enhancedMetaTags,\n    resourceHints,\n    reviewSchema,\n    howToSchema,\n    usePerformanceMonitoring\n  }\n}"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1761251034998,
      "end": 1761251034998,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1761251034998,
      "end": 1761251034998,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1761251034998,
      "end": 1761251034998,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1761251034998,
      "end": 1761251034999,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1761251034999,
      "end": 1761251034999,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1761251034999,
      "end": 1761251034999,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1761251034999,
      "end": 1761251034999,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1761251034999,
      "end": 1761251035000,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1761251035000,
      "end": 1761251035000,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1761251035000,
      "end": 1761251035000,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "export const useEnhancedMetaTags = () => {\n  useHead({\n    meta: [\n      // Enhanced crawling directives\n      { name: \"robots\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      { name: \"googlebot\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      { name: \"bingbot\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      // Social media optimization\n      { name: \"twitter:site\", content: \"@amerusfinancial\" },\n      { name: \"twitter:creator\", content: \"@amerusfinancial\" },\n      // Technical SEO\n      { name: \"format-detection\", content: \"telephone=no\" },\n      { name: \"theme-color\", content: \"#30BCFE\" },\n      // Security headers\n      { \"http-equiv\": \"X-Content-Type-Options\", content: \"nosniff\" },\n      { \"http-equiv\": \"X-Frame-Options\", content: \"SAMEORIGIN\" },\n      { \"http-equiv\": \"X-XSS-Protection\", content: \"1; mode=block\" }\n    ],\n    link: [\n      // DNS prefetch for performance\n      { rel: \"dns-prefetch\", href: \"//fonts.googleapis.com\" },\n      { rel: \"dns-prefetch\", href: \"//www.google-analytics.com\" },\n      { rel: \"dns-prefetch\", href: \"//connect.facebook.net\" },\n      // Preconnect for critical resources\n      { rel: \"preconnect\", href: \"https://fonts.gstatic.com\", crossorigin: \"\" }\n    ]\n  });\n};\nexport const useResourceHints = (criticalImages = []) => {\n  const links = [\n    // Preload critical fonts\n    { rel: \"preload\", as: \"font\", type: \"font/woff2\", href: \"/fonts/inter-var.woff2\", crossorigin: \"\" }\n  ];\n  criticalImages.forEach((image) => {\n    links.push({ rel: \"preload\", as: \"image\", href: image });\n  });\n  useHead({ link: links });\n};\nexport const useSocialMeta = (data) => {\n  useSeoMeta({\n    // Enhanced Open Graph\n    ogType: data.type || \"website\",\n    ogLocale: \"en_US\",\n    ogSiteName: \"Amerus Financial\",\n    // Enhanced Twitter\n    twitterSite: \"@amerusfinancial\",\n    twitterCreator: \"@amerusfinancial\",\n    // Additional optimization\n    robots: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\"\n  });\n};\nexport const useReviewSchema = (reviews) => {\n  const reviewSchemas = reviews.map((review) => ({\n    \"@type\": \"Review\",\n    reviewRating: {\n      \"@type\": \"Rating\",\n      ratingValue: review.rating.toString(),\n      bestRating: \"5\"\n    },\n    author: {\n      \"@type\": \"Person\",\n      name: review.author\n    },\n    reviewBody: review.review,\n    datePublished: review.date\n  }));\n  const avgRating = reviews.reduce((sum, review) => sum + review.rating, 0) / reviews.length;\n  return {\n    aggregateRating: {\n      \"@type\": \"AggregateRating\",\n      ratingValue: avgRating.toFixed(1),\n      reviewCount: reviews.length.toString(),\n      bestRating: \"5\",\n      worstRating: \"1\"\n    },\n    review: reviewSchemas\n  };\n};\nexport const useHowToSchema = (steps, title, description, totalTime, cost) => {\n  return {\n    \"@type\": \"HowTo\",\n    name: title,\n    description,\n    totalTime: totalTime || \"PT15M\",\n    ...cost && {\n      estimatedCost: {\n        \"@type\": \"MonetaryAmount\",\n        currency: \"USD\",\n        value: cost\n      }\n    },\n    step: steps.map((step) => ({\n      \"@type\": \"HowToStep\",\n      name: step.name,\n      text: step.text,\n      ...step.image && { image: step.image }\n    }))\n  };\n};\nexport const usePerformanceMonitoring = () => {\n  if (true) {\n    window.addEventListener(\"load\", () => {\n      setTimeout(() => {\n        const perfData = performance.getEntriesByType(\"navigation\")[0];\n        if (perfData) {\n          console.log(\"Page Load Performance:\", {\n            \"DNS Lookup\": perfData.domainLookupEnd - perfData.domainLookupStart,\n            \"TCP Connection\": perfData.connectEnd - perfData.connectStart,\n            \"First Byte\": perfData.responseStart - perfData.requestStart,\n            \"DOM Loading\": perfData.domContentLoadedEventEnd - perfData.responseStart,\n            \"Total Load Time\": perfData.loadEventEnd - perfData.fetchStart\n          });\n        }\n      }, 100);\n    });\n  }\n};\nexport const useStableSEO = () => {\n  const enhancedMetaTags = {\n    meta: [\n      // Enhanced crawling directives\n      { name: \"robots\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      { name: \"googlebot\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      { name: \"bingbot\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      // Social media optimization\n      { name: \"twitter:site\", content: \"@amerusfinancial\" },\n      { name: \"twitter:creator\", content: \"@amerusfinancial\" },\n      // Technical SEO\n      { name: \"format-detection\", content: \"telephone=no\" },\n      { name: \"theme-color\", content: \"#30BCFE\" },\n      // Security headers\n      { \"http-equiv\": \"X-Content-Type-Options\", content: \"nosniff\" },\n      { \"http-equiv\": \"X-Frame-Options\", content: \"SAMEORIGIN\" },\n      { \"http-equiv\": \"X-XSS-Protection\", content: \"1; mode=block\" }\n    ],\n    link: [\n      // DNS prefetch for performance\n      { rel: \"dns-prefetch\", href: \"//fonts.googleapis.com\" },\n      { rel: \"dns-prefetch\", href: \"//www.google-analytics.com\" },\n      { rel: \"dns-prefetch\", href: \"//connect.facebook.net\" },\n      // Preconnect for critical resources\n      { rel: \"preconnect\", href: \"https://fonts.gstatic.com\", crossorigin: \"\" }\n    ]\n  };\n  const resourceHints = (criticalImages = []) => {\n    const links = [\n      // Preload critical fonts\n      { rel: \"preload\", as: \"font\", type: \"font/woff2\", href: \"/fonts/inter-var.woff2\", crossorigin: \"\" }\n    ];\n    criticalImages.forEach((image) => {\n      links.push({ rel: \"preload\", as: \"image\", href: image });\n    });\n    return { link: links };\n  };\n  const reviewSchema = (name, description, reviews) => {\n    const avgRating = reviews.reduce((sum, review) => sum + review.rating, 0) / reviews.length;\n    return {\n      \"@type\": \"Service\",\n      name,\n      description,\n      aggregateRating: {\n        \"@type\": \"AggregateRating\",\n        ratingValue: avgRating.toFixed(1),\n        reviewCount: reviews.length.toString(),\n        bestRating: \"5\",\n        worstRating: \"1\"\n      },\n      review: reviews.map((review) => ({\n        \"@type\": \"Review\",\n        reviewRating: {\n          \"@type\": \"Rating\",\n          ratingValue: review.rating.toString(),\n          bestRating: \"5\"\n        },\n        author: {\n          \"@type\": \"Person\",\n          name: review.author\n        },\n        reviewBody: review.text\n      }))\n    };\n  };\n  const howToSchema = (title, description, image, totalTime, steps) => {\n    return {\n      \"@type\": \"HowTo\",\n      name: title,\n      description,\n      image,\n      totalTime: `PT${totalTime}M`,\n      step: steps.map((step, index) => ({\n        \"@type\": \"HowToStep\",\n        position: index + 1,\n        name: step.name,\n        text: step.text\n      }))\n    };\n  };\n  return {\n    enhancedMetaTags,\n    resourceHints,\n    reviewSchema,\n    howToSchema,\n    usePerformanceMonitoring\n  };\n};\n",
      "start": 1761251035000,
      "end": 1761251035052,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1761251035052,
      "end": 1761251035052,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1761251035052,
      "end": 1761251035052,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1761251035052,
      "end": 1761251035052,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1761251035052,
      "end": 1761251035052,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1761251035052,
      "end": 1761251035052,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1761251035053,
      "end": 1761251035053,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1761251035053,
      "end": 1761251035053,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1761251035053,
      "end": 1761251035053,
      "order": "post"
    },
    {
      "name": "unhead:use-seo-meta-transform",
      "result": "export const useEnhancedMetaTags = () => {\n  useHead({\n    meta: [\n      // Enhanced crawling directives\n      { name: \"robots\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      { name: \"googlebot\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      { name: \"bingbot\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      // Social media optimization\n      { name: \"twitter:site\", content: \"@amerusfinancial\" },\n      { name: \"twitter:creator\", content: \"@amerusfinancial\" },\n      // Technical SEO\n      { name: \"format-detection\", content: \"telephone=no\" },\n      { name: \"theme-color\", content: \"#30BCFE\" },\n      // Security headers\n      { \"http-equiv\": \"X-Content-Type-Options\", content: \"nosniff\" },\n      { \"http-equiv\": \"X-Frame-Options\", content: \"SAMEORIGIN\" },\n      { \"http-equiv\": \"X-XSS-Protection\", content: \"1; mode=block\" }\n    ],\n    link: [\n      // DNS prefetch for performance\n      { rel: \"dns-prefetch\", href: \"//fonts.googleapis.com\" },\n      { rel: \"dns-prefetch\", href: \"//www.google-analytics.com\" },\n      { rel: \"dns-prefetch\", href: \"//connect.facebook.net\" },\n      // Preconnect for critical resources\n      { rel: \"preconnect\", href: \"https://fonts.gstatic.com\", crossorigin: \"\" }\n    ]\n  });\n};\nexport const useResourceHints = (criticalImages = []) => {\n  const links = [\n    // Preload critical fonts\n    { rel: \"preload\", as: \"font\", type: \"font/woff2\", href: \"/fonts/inter-var.woff2\", crossorigin: \"\" }\n  ];\n  criticalImages.forEach((image) => {\n    links.push({ rel: \"preload\", as: \"image\", href: image });\n  });\n  useHead({ link: links });\n};\nexport const useSocialMeta = (data) => {\n  useHead({\n  meta: [\n    { property: 'og:type', content: data.type || \"website\" },\n    { property: 'og:locale', content: \"en_US\" },\n    { property: 'og:site_name', content: \"Amerus Financial\" },\n    { name: 'twitter:site', content: \"@amerusfinancial\" },\n    { name: 'twitter:creator', content: \"@amerusfinancial\" },\n    { name: 'robots', content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n  ]\n});\n};\nexport const useReviewSchema = (reviews) => {\n  const reviewSchemas = reviews.map((review) => ({\n    \"@type\": \"Review\",\n    reviewRating: {\n      \"@type\": \"Rating\",\n      ratingValue: review.rating.toString(),\n      bestRating: \"5\"\n    },\n    author: {\n      \"@type\": \"Person\",\n      name: review.author\n    },\n    reviewBody: review.review,\n    datePublished: review.date\n  }));\n  const avgRating = reviews.reduce((sum, review) => sum + review.rating, 0) / reviews.length;\n  return {\n    aggregateRating: {\n      \"@type\": \"AggregateRating\",\n      ratingValue: avgRating.toFixed(1),\n      reviewCount: reviews.length.toString(),\n      bestRating: \"5\",\n      worstRating: \"1\"\n    },\n    review: reviewSchemas\n  };\n};\nexport const useHowToSchema = (steps, title, description, totalTime, cost) => {\n  return {\n    \"@type\": \"HowTo\",\n    name: title,\n    description,\n    totalTime: totalTime || \"PT15M\",\n    ...cost && {\n      estimatedCost: {\n        \"@type\": \"MonetaryAmount\",\n        currency: \"USD\",\n        value: cost\n      }\n    },\n    step: steps.map((step) => ({\n      \"@type\": \"HowToStep\",\n      name: step.name,\n      text: step.text,\n      ...step.image && { image: step.image }\n    }))\n  };\n};\nexport const usePerformanceMonitoring = () => {\n  if (true) {\n    window.addEventListener(\"load\", () => {\n      setTimeout(() => {\n        const perfData = performance.getEntriesByType(\"navigation\")[0];\n        if (perfData) {\n          console.log(\"Page Load Performance:\", {\n            \"DNS Lookup\": perfData.domainLookupEnd - perfData.domainLookupStart,\n            \"TCP Connection\": perfData.connectEnd - perfData.connectStart,\n            \"First Byte\": perfData.responseStart - perfData.requestStart,\n            \"DOM Loading\": perfData.domContentLoadedEventEnd - perfData.responseStart,\n            \"Total Load Time\": perfData.loadEventEnd - perfData.fetchStart\n          });\n        }\n      }, 100);\n    });\n  }\n};\nexport const useStableSEO = () => {\n  const enhancedMetaTags = {\n    meta: [\n      // Enhanced crawling directives\n      { name: \"robots\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      { name: \"googlebot\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      { name: \"bingbot\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      // Social media optimization\n      { name: \"twitter:site\", content: \"@amerusfinancial\" },\n      { name: \"twitter:creator\", content: \"@amerusfinancial\" },\n      // Technical SEO\n      { name: \"format-detection\", content: \"telephone=no\" },\n      { name: \"theme-color\", content: \"#30BCFE\" },\n      // Security headers\n      { \"http-equiv\": \"X-Content-Type-Options\", content: \"nosniff\" },\n      { \"http-equiv\": \"X-Frame-Options\", content: \"SAMEORIGIN\" },\n      { \"http-equiv\": \"X-XSS-Protection\", content: \"1; mode=block\" }\n    ],\n    link: [\n      // DNS prefetch for performance\n      { rel: \"dns-prefetch\", href: \"//fonts.googleapis.com\" },\n      { rel: \"dns-prefetch\", href: \"//www.google-analytics.com\" },\n      { rel: \"dns-prefetch\", href: \"//connect.facebook.net\" },\n      // Preconnect for critical resources\n      { rel: \"preconnect\", href: \"https://fonts.gstatic.com\", crossorigin: \"\" }\n    ]\n  };\n  const resourceHints = (criticalImages = []) => {\n    const links = [\n      // Preload critical fonts\n      { rel: \"preload\", as: \"font\", type: \"font/woff2\", href: \"/fonts/inter-var.woff2\", crossorigin: \"\" }\n    ];\n    criticalImages.forEach((image) => {\n      links.push({ rel: \"preload\", as: \"image\", href: image });\n    });\n    return { link: links };\n  };\n  const reviewSchema = (name, description, reviews) => {\n    const avgRating = reviews.reduce((sum, review) => sum + review.rating, 0) / reviews.length;\n    return {\n      \"@type\": \"Service\",\n      name,\n      description,\n      aggregateRating: {\n        \"@type\": \"AggregateRating\",\n        ratingValue: avgRating.toFixed(1),\n        reviewCount: reviews.length.toString(),\n        bestRating: \"5\",\n        worstRating: \"1\"\n      },\n      review: reviews.map((review) => ({\n        \"@type\": \"Review\",\n        reviewRating: {\n          \"@type\": \"Rating\",\n          ratingValue: review.rating.toString(),\n          bestRating: \"5\"\n        },\n        author: {\n          \"@type\": \"Person\",\n          name: review.author\n        },\n        reviewBody: review.text\n      }))\n    };\n  };\n  const howToSchema = (title, description, image, totalTime, steps) => {\n    return {\n      \"@type\": \"HowTo\",\n      name: title,\n      description,\n      image,\n      totalTime: `PT${totalTime}M`,\n      step: steps.map((step, index) => ({\n        \"@type\": \"HowToStep\",\n        position: index + 1,\n        name: step.name,\n        text: step.text\n      }))\n    };\n  };\n  return {\n    enhancedMetaTags,\n    resourceHints,\n    reviewSchema,\n    howToSchema,\n    usePerformanceMonitoring\n  };\n};\n",
      "start": 1761251035053,
      "end": 1761251035073,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/amerusfinancial/Desktop/projects/Amerus/app/composables/useStableSEO.ts"
        ],
        "sourcesContent": [
          "export const useEnhancedMetaTags = () => {\n  useHead({\n    meta: [\n      // Enhanced crawling directives\n      { name: \"robots\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      { name: \"googlebot\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      { name: \"bingbot\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      // Social media optimization\n      { name: \"twitter:site\", content: \"@amerusfinancial\" },\n      { name: \"twitter:creator\", content: \"@amerusfinancial\" },\n      // Technical SEO\n      { name: \"format-detection\", content: \"telephone=no\" },\n      { name: \"theme-color\", content: \"#30BCFE\" },\n      // Security headers\n      { \"http-equiv\": \"X-Content-Type-Options\", content: \"nosniff\" },\n      { \"http-equiv\": \"X-Frame-Options\", content: \"SAMEORIGIN\" },\n      { \"http-equiv\": \"X-XSS-Protection\", content: \"1; mode=block\" }\n    ],\n    link: [\n      // DNS prefetch for performance\n      { rel: \"dns-prefetch\", href: \"//fonts.googleapis.com\" },\n      { rel: \"dns-prefetch\", href: \"//www.google-analytics.com\" },\n      { rel: \"dns-prefetch\", href: \"//connect.facebook.net\" },\n      // Preconnect for critical resources\n      { rel: \"preconnect\", href: \"https://fonts.gstatic.com\", crossorigin: \"\" }\n    ]\n  });\n};\nexport const useResourceHints = (criticalImages = []) => {\n  const links = [\n    // Preload critical fonts\n    { rel: \"preload\", as: \"font\", type: \"font/woff2\", href: \"/fonts/inter-var.woff2\", crossorigin: \"\" }\n  ];\n  criticalImages.forEach((image) => {\n    links.push({ rel: \"preload\", as: \"image\", href: image });\n  });\n  useHead({ link: links });\n};\nexport const useSocialMeta = (data) => {\n  useSeoMeta({\n    // Enhanced Open Graph\n    ogType: data.type || \"website\",\n    ogLocale: \"en_US\",\n    ogSiteName: \"Amerus Financial\",\n    // Enhanced Twitter\n    twitterSite: \"@amerusfinancial\",\n    twitterCreator: \"@amerusfinancial\",\n    // Additional optimization\n    robots: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\"\n  });\n};\nexport const useReviewSchema = (reviews) => {\n  const reviewSchemas = reviews.map((review) => ({\n    \"@type\": \"Review\",\n    reviewRating: {\n      \"@type\": \"Rating\",\n      ratingValue: review.rating.toString(),\n      bestRating: \"5\"\n    },\n    author: {\n      \"@type\": \"Person\",\n      name: review.author\n    },\n    reviewBody: review.review,\n    datePublished: review.date\n  }));\n  const avgRating = reviews.reduce((sum, review) => sum + review.rating, 0) / reviews.length;\n  return {\n    aggregateRating: {\n      \"@type\": \"AggregateRating\",\n      ratingValue: avgRating.toFixed(1),\n      reviewCount: reviews.length.toString(),\n      bestRating: \"5\",\n      worstRating: \"1\"\n    },\n    review: reviewSchemas\n  };\n};\nexport const useHowToSchema = (steps, title, description, totalTime, cost) => {\n  return {\n    \"@type\": \"HowTo\",\n    name: title,\n    description,\n    totalTime: totalTime || \"PT15M\",\n    ...cost && {\n      estimatedCost: {\n        \"@type\": \"MonetaryAmount\",\n        currency: \"USD\",\n        value: cost\n      }\n    },\n    step: steps.map((step) => ({\n      \"@type\": \"HowToStep\",\n      name: step.name,\n      text: step.text,\n      ...step.image && { image: step.image }\n    }))\n  };\n};\nexport const usePerformanceMonitoring = () => {\n  if (true) {\n    window.addEventListener(\"load\", () => {\n      setTimeout(() => {\n        const perfData = performance.getEntriesByType(\"navigation\")[0];\n        if (perfData) {\n          console.log(\"Page Load Performance:\", {\n            \"DNS Lookup\": perfData.domainLookupEnd - perfData.domainLookupStart,\n            \"TCP Connection\": perfData.connectEnd - perfData.connectStart,\n            \"First Byte\": perfData.responseStart - perfData.requestStart,\n            \"DOM Loading\": perfData.domContentLoadedEventEnd - perfData.responseStart,\n            \"Total Load Time\": perfData.loadEventEnd - perfData.fetchStart\n          });\n        }\n      }, 100);\n    });\n  }\n};\nexport const useStableSEO = () => {\n  const enhancedMetaTags = {\n    meta: [\n      // Enhanced crawling directives\n      { name: \"robots\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      { name: \"googlebot\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      { name: \"bingbot\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      // Social media optimization\n      { name: \"twitter:site\", content: \"@amerusfinancial\" },\n      { name: \"twitter:creator\", content: \"@amerusfinancial\" },\n      // Technical SEO\n      { name: \"format-detection\", content: \"telephone=no\" },\n      { name: \"theme-color\", content: \"#30BCFE\" },\n      // Security headers\n      { \"http-equiv\": \"X-Content-Type-Options\", content: \"nosniff\" },\n      { \"http-equiv\": \"X-Frame-Options\", content: \"SAMEORIGIN\" },\n      { \"http-equiv\": \"X-XSS-Protection\", content: \"1; mode=block\" }\n    ],\n    link: [\n      // DNS prefetch for performance\n      { rel: \"dns-prefetch\", href: \"//fonts.googleapis.com\" },\n      { rel: \"dns-prefetch\", href: \"//www.google-analytics.com\" },\n      { rel: \"dns-prefetch\", href: \"//connect.facebook.net\" },\n      // Preconnect for critical resources\n      { rel: \"preconnect\", href: \"https://fonts.gstatic.com\", crossorigin: \"\" }\n    ]\n  };\n  const resourceHints = (criticalImages = []) => {\n    const links = [\n      // Preload critical fonts\n      { rel: \"preload\", as: \"font\", type: \"font/woff2\", href: \"/fonts/inter-var.woff2\", crossorigin: \"\" }\n    ];\n    criticalImages.forEach((image) => {\n      links.push({ rel: \"preload\", as: \"image\", href: image });\n    });\n    return { link: links };\n  };\n  const reviewSchema = (name, description, reviews) => {\n    const avgRating = reviews.reduce((sum, review) => sum + review.rating, 0) / reviews.length;\n    return {\n      \"@type\": \"Service\",\n      name,\n      description,\n      aggregateRating: {\n        \"@type\": \"AggregateRating\",\n        ratingValue: avgRating.toFixed(1),\n        reviewCount: reviews.length.toString(),\n        bestRating: \"5\",\n        worstRating: \"1\"\n      },\n      review: reviews.map((review) => ({\n        \"@type\": \"Review\",\n        reviewRating: {\n          \"@type\": \"Rating\",\n          ratingValue: review.rating.toString(),\n          bestRating: \"5\"\n        },\n        author: {\n          \"@type\": \"Person\",\n          name: review.author\n        },\n        reviewBody: review.text\n      }))\n    };\n  };\n  const howToSchema = (title, description, image, totalTime, steps) => {\n    return {\n      \"@type\": \"HowTo\",\n      name: title,\n      description,\n      image,\n      totalTime: `PT${totalTime}M`,\n      step: steps.map((step, index) => ({\n        \"@type\": \"HowToStep\",\n        position: index + 1,\n        name: step.name,\n        text: step.text\n      }))\n    };\n  };\n  return {\n    enhancedMetaTags,\n    resourceHints,\n    reviewSchema,\n    howToSchema,\n    usePerformanceMonitoring\n  };\n};\n"
        ],
        "names": [],
        "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;"
      }
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useHead } from '@unhead/vue';\nexport const useEnhancedMetaTags = () => {\n  useHead({\n    meta: [\n      // Enhanced crawling directives\n      { name: \"robots\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      { name: \"googlebot\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      { name: \"bingbot\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      // Social media optimization\n      { name: \"twitter:site\", content: \"@amerusfinancial\" },\n      { name: \"twitter:creator\", content: \"@amerusfinancial\" },\n      // Technical SEO\n      { name: \"format-detection\", content: \"telephone=no\" },\n      { name: \"theme-color\", content: \"#30BCFE\" },\n      // Security headers\n      { \"http-equiv\": \"X-Content-Type-Options\", content: \"nosniff\" },\n      { \"http-equiv\": \"X-Frame-Options\", content: \"SAMEORIGIN\" },\n      { \"http-equiv\": \"X-XSS-Protection\", content: \"1; mode=block\" }\n    ],\n    link: [\n      // DNS prefetch for performance\n      { rel: \"dns-prefetch\", href: \"//fonts.googleapis.com\" },\n      { rel: \"dns-prefetch\", href: \"//www.google-analytics.com\" },\n      { rel: \"dns-prefetch\", href: \"//connect.facebook.net\" },\n      // Preconnect for critical resources\n      { rel: \"preconnect\", href: \"https://fonts.gstatic.com\", crossorigin: \"\" }\n    ]\n  });\n};\nexport const useResourceHints = (criticalImages = []) => {\n  const links = [\n    // Preload critical fonts\n    { rel: \"preload\", as: \"font\", type: \"font/woff2\", href: \"/fonts/inter-var.woff2\", crossorigin: \"\" }\n  ];\n  criticalImages.forEach((image) => {\n    links.push({ rel: \"preload\", as: \"image\", href: image });\n  });\n  useHead({ link: links });\n};\nexport const useSocialMeta = (data) => {\n  useHead({\n  meta: [\n    { property: 'og:type', content: data.type || \"website\" },\n    { property: 'og:locale', content: \"en_US\" },\n    { property: 'og:site_name', content: \"Amerus Financial\" },\n    { name: 'twitter:site', content: \"@amerusfinancial\" },\n    { name: 'twitter:creator', content: \"@amerusfinancial\" },\n    { name: 'robots', content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n  ]\n});\n};\nexport const useReviewSchema = (reviews) => {\n  const reviewSchemas = reviews.map((review) => ({\n    \"@type\": \"Review\",\n    reviewRating: {\n      \"@type\": \"Rating\",\n      ratingValue: review.rating.toString(),\n      bestRating: \"5\"\n    },\n    author: {\n      \"@type\": \"Person\",\n      name: review.author\n    },\n    reviewBody: review.review,\n    datePublished: review.date\n  }));\n  const avgRating = reviews.reduce((sum, review) => sum + review.rating, 0) / reviews.length;\n  return {\n    aggregateRating: {\n      \"@type\": \"AggregateRating\",\n      ratingValue: avgRating.toFixed(1),\n      reviewCount: reviews.length.toString(),\n      bestRating: \"5\",\n      worstRating: \"1\"\n    },\n    review: reviewSchemas\n  };\n};\nexport const useHowToSchema = (steps, title, description, totalTime, cost) => {\n  return {\n    \"@type\": \"HowTo\",\n    name: title,\n    description,\n    totalTime: totalTime || \"PT15M\",\n    ...cost && {\n      estimatedCost: {\n        \"@type\": \"MonetaryAmount\",\n        currency: \"USD\",\n        value: cost\n      }\n    },\n    step: steps.map((step) => ({\n      \"@type\": \"HowToStep\",\n      name: step.name,\n      text: step.text,\n      ...step.image && { image: step.image }\n    }))\n  };\n};\nexport const usePerformanceMonitoring = () => {\n  if (true) {\n    window.addEventListener(\"load\", () => {\n      setTimeout(() => {\n        const perfData = performance.getEntriesByType(\"navigation\")[0];\n        if (perfData) {\n          console.log(\"Page Load Performance:\", {\n            \"DNS Lookup\": perfData.domainLookupEnd - perfData.domainLookupStart,\n            \"TCP Connection\": perfData.connectEnd - perfData.connectStart,\n            \"First Byte\": perfData.responseStart - perfData.requestStart,\n            \"DOM Loading\": perfData.domContentLoadedEventEnd - perfData.responseStart,\n            \"Total Load Time\": perfData.loadEventEnd - perfData.fetchStart\n          });\n        }\n      }, 100);\n    });\n  }\n};\nexport const useStableSEO = () => {\n  const enhancedMetaTags = {\n    meta: [\n      // Enhanced crawling directives\n      { name: \"robots\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      { name: \"googlebot\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      { name: \"bingbot\", content: \"index,follow,max-image-preview:large,max-snippet:-1,max-video-preview:-1\" },\n      // Social media optimization\n      { name: \"twitter:site\", content: \"@amerusfinancial\" },\n      { name: \"twitter:creator\", content: \"@amerusfinancial\" },\n      // Technical SEO\n      { name: \"format-detection\", content: \"telephone=no\" },\n      { name: \"theme-color\", content: \"#30BCFE\" },\n      // Security headers\n      { \"http-equiv\": \"X-Content-Type-Options\", content: \"nosniff\" },\n      { \"http-equiv\": \"X-Frame-Options\", content: \"SAMEORIGIN\" },\n      { \"http-equiv\": \"X-XSS-Protection\", content: \"1; mode=block\" }\n    ],\n    link: [\n      // DNS prefetch for performance\n      { rel: \"dns-prefetch\", href: \"//fonts.googleapis.com\" },\n      { rel: \"dns-prefetch\", href: \"//www.google-analytics.com\" },\n      { rel: \"dns-prefetch\", href: \"//connect.facebook.net\" },\n      // Preconnect for critical resources\n      { rel: \"preconnect\", href: \"https://fonts.gstatic.com\", crossorigin: \"\" }\n    ]\n  };\n  const resourceHints = (criticalImages = []) => {\n    const links = [\n      // Preload critical fonts\n      { rel: \"preload\", as: \"font\", type: \"font/woff2\", href: \"/fonts/inter-var.woff2\", crossorigin: \"\" }\n    ];\n    criticalImages.forEach((image) => {\n      links.push({ rel: \"preload\", as: \"image\", href: image });\n    });\n    return { link: links };\n  };\n  const reviewSchema = (name, description, reviews) => {\n    const avgRating = reviews.reduce((sum, review) => sum + review.rating, 0) / reviews.length;\n    return {\n      \"@type\": \"Service\",\n      name,\n      description,\n      aggregateRating: {\n        \"@type\": \"AggregateRating\",\n        ratingValue: avgRating.toFixed(1),\n        reviewCount: reviews.length.toString(),\n        bestRating: \"5\",\n        worstRating: \"1\"\n      },\n      review: reviews.map((review) => ({\n        \"@type\": \"Review\",\n        reviewRating: {\n          \"@type\": \"Rating\",\n          ratingValue: review.rating.toString(),\n          bestRating: \"5\"\n        },\n        author: {\n          \"@type\": \"Person\",\n          name: review.author\n        },\n        reviewBody: review.text\n      }))\n    };\n  };\n  const howToSchema = (title, description, image, totalTime, steps) => {\n    return {\n      \"@type\": \"HowTo\",\n      name: title,\n      description,\n      image,\n      totalTime: `PT${totalTime}M`,\n      step: steps.map((step, index) => ({\n        \"@type\": \"HowToStep\",\n        position: index + 1,\n        name: step.name,\n        text: step.text\n      }))\n    };\n  };\n  return {\n    enhancedMetaTags,\n    resourceHints,\n    reviewSchema,\n    howToSchema,\n    usePerformanceMonitoring\n  };\n};\n",
      "start": 1761251035073,
      "end": 1761251035084,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrjltlD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrljvG,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxhlD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACztB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,C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CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AACH,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrjH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/G,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtlD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrllD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvxzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CA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AC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1761251035084,
      "end": 1761251035084,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1761251035084,
      "end": 1761251035084,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1761251035084,
      "end": 1761251035084,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1761251035084,
      "end": 1761251035084,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1761251035084,
      "end": 1761251035084,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1761251035084,
      "end": 1761251035084,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1761251035084,
      "end": 1761251035084,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1761251035084,
      "end": 1761251035085,
      "order": "normal"
    }
  ]
}
