{
  "resolvedId": "/Users/amerusfinancial/Desktop/projects/Amerus/app/node_modules/@tiptap/extension-hard-break/dist/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { Node, mergeAttributes } from '@tiptap/core';\n\nconst HardBreak = Node.create({\r\n    name: 'hardBreak',\r\n    addOptions() {\r\n        return {\r\n            keepMarks: true,\r\n            HTMLAttributes: {},\r\n        };\r\n    },\r\n    inline: true,\r\n    group: 'inline',\r\n    selectable: false,\r\n    parseHTML() {\r\n        return [\r\n            { tag: 'br' },\r\n        ];\r\n    },\r\n    renderHTML({ HTMLAttributes }) {\r\n        return ['br', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)];\r\n    },\r\n    renderText() {\r\n        return '\\n';\r\n    },\r\n    addCommands() {\r\n        return {\r\n            setHardBreak: () => ({ commands, chain, state, editor, }) => {\r\n                return commands.first([\r\n                    () => commands.exitCode(),\r\n                    () => commands.command(() => {\r\n                        const { selection, storedMarks } = state;\r\n                        if (selection.$from.parent.type.spec.isolating) {\r\n                            return false;\r\n                        }\r\n                        const { keepMarks } = this.options;\r\n                        const { splittableMarks } = editor.extensionManager;\r\n                        const marks = storedMarks\r\n                            || (selection.$to.parentOffset && selection.$from.marks());\r\n                        return chain()\r\n                            .insertContent({ type: this.name })\r\n                            .command(({ tr, dispatch }) => {\r\n                            if (dispatch && marks && keepMarks) {\r\n                                const filteredMarks = marks\r\n                                    .filter(mark => splittableMarks.includes(mark.type.name));\r\n                                tr.ensureMarks(filteredMarks);\r\n                            }\r\n                            return true;\r\n                        })\r\n                            .run();\r\n                    }),\r\n                ]);\r\n            },\r\n        };\r\n    },\r\n    addKeyboardShortcuts() {\r\n        return {\r\n            'Mod-Enter': () => this.editor.commands.setHardBreak(),\r\n            'Shift-Enter': () => this.editor.commands.setHardBreak(),\r\n        };\r\n    },\r\n});\n\nexport { HardBreak, HardBreak as default };\n//# sourceMappingURL=index.js.map\n",
      "start": 1761251039126,
      "end": 1761251039374,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1761251039374,
      "end": 1761251039374,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1761251039374,
      "end": 1761251039374,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1761251039374,
      "end": 1761251039374,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1761251039374,
      "end": 1761251039374,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1761251039374,
      "end": 1761251039374,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1761251039374,
      "end": 1761251039374,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1761251039374,
      "end": 1761251039374,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1761251039374,
      "end": 1761251039374,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1761251039374,
      "end": 1761251039374,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1761251039374,
      "end": 1761251039374,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1761251039374,
      "end": 1761251039374,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1761251039374,
      "end": 1761251039374,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1761251039374,
      "end": 1761251039374,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1761251039374,
      "end": 1761251039374,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1761251039374,
      "end": 1761251039374,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1761251039374,
      "end": 1761251039374,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1761251039374,
      "end": 1761251039374,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1761251039374,
      "end": 1761251039374,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1761251039374,
      "end": 1761251039374,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1761251039374,
      "end": 1761251039374,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1761251039374,
      "end": 1761251039374,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1761251039374,
      "end": 1761251039375,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "post"
    },
    {
      "name": "unhead:use-seo-meta-transform",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "normal"
    }
  ]
}
