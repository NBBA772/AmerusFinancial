{
  "resolvedId": "/Users/amerusfinancial/Desktop/projects/Amerus/app/node_modules/@tiptap/extension-heading/dist/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { Node, mergeAttributes, textblockTypeInputRule } from '@tiptap/core';\n\nconst Heading = Node.create({\r\n    name: 'heading',\r\n    addOptions() {\r\n        return {\r\n            levels: [1, 2, 3, 4, 5, 6],\r\n            HTMLAttributes: {},\r\n        };\r\n    },\r\n    content: 'inline*',\r\n    group: 'block',\r\n    defining: true,\r\n    addAttributes() {\r\n        return {\r\n            level: {\r\n                default: 1,\r\n                rendered: false,\r\n            },\r\n        };\r\n    },\r\n    parseHTML() {\r\n        return this.options.levels\r\n            .map((level) => ({\r\n            tag: `h${level}`,\r\n            attrs: { level },\r\n        }));\r\n    },\r\n    renderHTML({ node, HTMLAttributes }) {\r\n        const hasLevel = this.options.levels.includes(node.attrs.level);\r\n        const level = hasLevel\r\n            ? node.attrs.level\r\n            : this.options.levels[0];\r\n        return [`h${level}`, mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\r\n    },\r\n    addCommands() {\r\n        return {\r\n            setHeading: attributes => ({ commands }) => {\r\n                if (!this.options.levels.includes(attributes.level)) {\r\n                    return false;\r\n                }\r\n                return commands.setNode(this.name, attributes);\r\n            },\r\n            toggleHeading: attributes => ({ commands }) => {\r\n                if (!this.options.levels.includes(attributes.level)) {\r\n                    return false;\r\n                }\r\n                return commands.toggleNode(this.name, 'paragraph', attributes);\r\n            },\r\n        };\r\n    },\r\n    addKeyboardShortcuts() {\r\n        return this.options.levels.reduce((items, level) => ({\r\n            ...items,\r\n            ...{\r\n                [`Mod-Alt-${level}`]: () => this.editor.commands.toggleHeading({ level }),\r\n            },\r\n        }), {});\r\n    },\r\n    addInputRules() {\r\n        return this.options.levels.map(level => {\r\n            return textblockTypeInputRule({\r\n                find: new RegExp(`^(#{1,${level}})\\\\s$`),\r\n                type: this.type,\r\n                getAttributes: {\r\n                    level,\r\n                },\r\n            });\r\n        });\r\n    },\r\n});\n\nexport { Heading, Heading as default };\n//# sourceMappingURL=index.js.map\n",
      "start": 1761251039138,
      "end": 1761251039375,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1761251039375,
      "end": 1761251039375,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1761251039375,
      "end": 1761251039376,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1761251039376,
      "end": 1761251039376,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1761251039376,
      "end": 1761251039376,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1761251039376,
      "end": 1761251039376,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1761251039376,
      "end": 1761251039376,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1761251039376,
      "end": 1761251039376,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1761251039376,
      "end": 1761251039376,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1761251039376,
      "end": 1761251039376,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1761251039376,
      "end": 1761251039377,
      "order": "post"
    },
    {
      "name": "unhead:use-seo-meta-transform",
      "start": 1761251039377,
      "end": 1761251039377,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1761251039377,
      "end": 1761251039377,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1761251039377,
      "end": 1761251039377,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1761251039377,
      "end": 1761251039377,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1761251039377,
      "end": 1761251039377,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1761251039377,
      "end": 1761251039377,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1761251039377,
      "end": 1761251039377,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1761251039377,
      "end": 1761251039377,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1761251039377,
      "end": 1761251039377,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1761251039377,
      "end": 1761251039377,
      "order": "normal"
    }
  ]
}
