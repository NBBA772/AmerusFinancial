{
  "resolvedId": "/Users/amerusfinancial/Desktop/projects/Amerus/app/node_modules/@tiptap/extension-strike/dist/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { Mark, mergeAttributes, isMacOS, markInputRule, markPasteRule } from '@tiptap/core';\n\nconst inputRegex = /(?:^|\\s)((?:~~)((?:[^~]+))(?:~~))$/;\r\nconst pasteRegex = /(?:^|\\s)((?:~~)((?:[^~]+))(?:~~))/g;\r\nconst Strike = Mark.create({\r\n    name: 'strike',\r\n    addOptions() {\r\n        return {\r\n            HTMLAttributes: {},\r\n        };\r\n    },\r\n    parseHTML() {\r\n        return [\r\n            {\r\n                tag: 's',\r\n            },\r\n            {\r\n                tag: 'del',\r\n            },\r\n            {\r\n                tag: 'strike',\r\n            },\r\n            {\r\n                style: 'text-decoration',\r\n                consuming: false,\r\n                getAttrs: style => (style.includes('line-through') ? {} : false),\r\n            },\r\n        ];\r\n    },\r\n    renderHTML({ HTMLAttributes }) {\r\n        return ['s', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\r\n    },\r\n    addCommands() {\r\n        return {\r\n            setStrike: () => ({ commands }) => {\r\n                return commands.setMark(this.name);\r\n            },\r\n            toggleStrike: () => ({ commands }) => {\r\n                return commands.toggleMark(this.name);\r\n            },\r\n            unsetStrike: () => ({ commands }) => {\r\n                return commands.unsetMark(this.name);\r\n            },\r\n        };\r\n    },\r\n    addKeyboardShortcuts() {\r\n        const shortcuts = {};\r\n        if (isMacOS()) {\r\n            shortcuts['Mod-Shift-s'] = () => this.editor.commands.toggleStrike();\r\n        }\r\n        else {\r\n            shortcuts['Ctrl-Shift-s'] = () => this.editor.commands.toggleStrike();\r\n        }\r\n        return shortcuts;\r\n    },\r\n    addInputRules() {\r\n        return [\r\n            markInputRule({\r\n                find: inputRegex,\r\n                type: this.type,\r\n            }),\r\n        ];\r\n    },\r\n    addPasteRules() {\r\n        return [\r\n            markPasteRule({\r\n                find: pasteRegex,\r\n                type: this.type,\r\n            }),\r\n        ];\r\n    },\r\n});\n\nexport { Strike, Strike as default, inputRegex, pasteRegex };\n//# sourceMappingURL=index.js.map\n",
      "start": 1761251039197,
      "end": 1761251039534,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1761251039534,
      "end": 1761251039534,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1761251039534,
      "end": 1761251039534,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1761251039534,
      "end": 1761251039534,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1761251039534,
      "end": 1761251039534,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1761251039534,
      "end": 1761251039534,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1761251039534,
      "end": 1761251039534,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1761251039534,
      "end": 1761251039534,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1761251039534,
      "end": 1761251039534,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1761251039534,
      "end": 1761251039534,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1761251039534,
      "end": 1761251039534,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1761251039534,
      "end": 1761251039534,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1761251039534,
      "end": 1761251039534,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1761251039534,
      "end": 1761251039534,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1761251039534,
      "end": 1761251039534,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1761251039535,
      "end": 1761251039535,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1761251039535,
      "end": 1761251039535,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1761251039535,
      "end": 1761251039535,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1761251039535,
      "end": 1761251039535,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1761251039535,
      "end": 1761251039535,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1761251039535,
      "end": 1761251039535,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1761251039535,
      "end": 1761251039535,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1761251039535,
      "end": 1761251039535,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1761251039535,
      "end": 1761251039535,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1761251039535,
      "end": 1761251039535,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1761251039535,
      "end": 1761251039535,
      "order": "post"
    },
    {
      "name": "unhead:use-seo-meta-transform",
      "start": 1761251039535,
      "end": 1761251039535,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1761251039535,
      "end": 1761251039535,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1761251039535,
      "end": 1761251039535,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1761251039535,
      "end": 1761251039535,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1761251039535,
      "end": 1761251039535,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1761251039535,
      "end": 1761251039535,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1761251039535,
      "end": 1761251039535,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1761251039535,
      "end": 1761251039535,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1761251039535,
      "end": 1761251039535,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1761251039535,
      "end": 1761251039535,
      "order": "normal"
    }
  ]
}
