{
  "resolvedId": "/Users/amerusfinancial/Desktop/projects/Amerus/app/components/forms/SeniorMedicareQuoteForm.vue?nuxt_component=async&nuxt_component_name=SeniorMedicareQuoteForm",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <div>\n    <form @submit.prevent=\"handleSubmit\">\n      <!-- Step 1 form fields -->\n      <div v-if=\"currentStep === 1\" key=\"step1\">\n        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div class=\"relative mb-6 group\">\n            <label\n              for=\"floating_first_name\"\n              class=\"block mb-1 text-sm font-medium text-gray-700 text-left\"\n              >First Name:</label\n            >\n            <input\n              type=\"text\"\n              v-model=\"firstName\"\n              id=\"floating_first_name\"\n              name=\"floating_first_name\"\n              class=\"block w-full py-2.5 px-4 text-sm text-gray-800 bg-gray-100 border-b-2 border-gray-300 focus:outline-none focus:border-blue-500\"\n              placeholder=\" \"\n              required\n            />\n          </div>\n          <div class=\"relative mb-6 group\">\n            <label\n              for=\"floating_last_name\"\n              class=\"block mb-1 text-sm font-medium text-gray-700 text-left\"\n              >Last Name:</label\n            >\n            <input\n              type=\"text\"\n              v-model=\"lastName\"\n              id=\"floating_last_name\"\n              name=\"floating_last_name\"\n              class=\"block w-full py-2.5 px-4 text-sm text-gray-800 bg-gray-100 border-b-2 border-gray-300 focus:outline-none focus:border-blue-500\"\n              placeholder=\" \"\n              required\n            />\n          </div>\n        </div>\n\n        <div class=\"relative mb-6 group\">\n          <label\n            for=\"email\"\n            class=\"block mb-1 text-sm font-medium text-gray-700 text-left\"\n            >Email:</label\n          >\n          <input\n            type=\"email\"\n            v-model=\"email\"\n            id=\"email\"\n            name=\"email\"\n            class=\"block w-full py-2.5 px-4 text-sm text-gray-800 bg-gray-100 border-b-2 border-gray-300 focus:outline-none focus:border-blue-500\"\n            placeholder=\" \"\n            required\n          />\n        </div>\n\n        <div class=\"relative mb-6 group\">\n          <label\n            for=\"phoneNumber\"\n            class=\"block mb-1 text-sm font-medium text-gray-700 text-left\"\n            >Phone Number:</label\n          >\n          <input\n            type=\"tel\"\n            v-model=\"phoneNumber\"\n            id=\"phoneNumber\"\n            name=\"phoneNumber\"\n            class=\"block w-full py-2.5 px-4 text-sm text-gray-800 bg-gray-100 border-b-2 border-gray-300 focus:outline-none focus:border-blue-500\"\n            placeholder=\" \"\n            required\n          />\n        </div>\n\n        <div class=\"relative mb-6 group\">\n          <label\n            for=\"birthday\"\n            class=\"block mb-1 text-sm font-medium text-gray-700 text-left\"\n            >Birthday:</label\n          >\n          <input\n            type=\"date\"\n            v-model=\"birthday\"\n            id=\"birthday\"\n            name=\"birthday\"\n            class=\"block w-full py-2.5 px-4 text-sm text-gray-800 bg-gray-100 border-b-2 border-gray-300 focus:outline-none focus:border-blue-500\"\n            placeholder=\" \"\n            required\n          />\n        </div>\n\n        <div class=\"relative mb-6 group\">\n          <label\n            for=\"address\"\n            class=\"block mb-1 text-sm font-medium text-gray-700 text-left\"\n            >Address:</label\n          >\n          <input\n            type=\"text\"\n            v-model=\"address\"\n            id=\"address\"\n            name=\"address\"\n            class=\"block w-full py-2.5 px-4 text-sm text-gray-800 bg-gray-100 border-b-2 border-gray-300 focus:outline-none focus:border-blue-500\"\n            placeholder=\" \"\n            required\n          />\n        </div>\n\n        <div class=\"relative mb-6 group\">\n          <label\n            for=\"city\"\n            class=\"block mb-1 text-sm font-medium text-gray-700 text-left\"\n            >City:</label\n          >\n          <input\n            type=\"text\"\n            v-model=\"city\"\n            id=\"city\"\n            name=\"city\"\n            class=\"block w-full py-2.5 px-4 text-sm text-gray-800 bg-gray-100 border-b-2 border-gray-300 focus:outline-none focus:border-blue-500\"\n            placeholder=\" \"\n            required\n          />\n        </div>\n\n        <div class=\"relative mb-6 group\">\n          <label\n            for=\"state\"\n            class=\"block mb-1 text-sm font-medium text-gray-700 text-left\"\n            >State:</label\n          >\n          <input\n            type=\"text\"\n            v-model=\"state\"\n            id=\"state\"\n            name=\"state\"\n            class=\"block w-full py-2.5 px-4 text-sm text-gray-800 bg-gray-100 border-b-2 border-gray-300 focus:outline-none focus:border-blue-500\"\n            placeholder=\" \"\n            required\n          />\n        </div>\n\n        <div class=\"relative mb-6 group\">\n          <label\n            for=\"zipCode\"\n            class=\"block mb-1 text-sm font-medium text-gray-700 text-left\"\n            >Zip Code:</label\n          >\n          <input\n            type=\"text\"\n            v-model=\"zipCode\"\n            id=\"zipCode\"\n            name=\"zipCode\"\n            class=\"block w-full py-2.5 px-4 text-sm text-gray-800 bg-gray-100 border-b-2 border-gray-300 focus:outline-none focus:border-blue-500\"\n            placeholder=\" \"\n            required\n          />\n        </div>\n        <button\n          @click=\"nextStep\"\n          class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded pagination-button\"\n          :disabled=\"currentStep === 4\"\n        >\n          Next\n        </button>\n      </div>\n\n      <!-- Step 2 form fields -->\n      <div v-if=\"currentStep === 2\" key=\"step2\">\n        <!-- Select dropdown for Medicare enrollment -->\n        <div class=\"relative mb-6 group\">\n          <label\n            for=\"medicareEnrollment\"\n            class=\"block mb-1 text-sm font-medium text-gray-700 text-left\"\n          >\n            Are you currently enrolled in Part A and Part B of Medicare?\n          </label>\n          <select\n            v-model=\"enrolledInMedicare\"\n            id=\"medicareEnrollment\"\n            name=\"medicareEnrollment\"\n            class=\"block w-full py-2.5 px-4 text-sm text-gray-800 bg-gray-100 border-b-2 border-gray-300 focus:outline-none focus:border-blue-500\"\n            required\n          >\n            <option value=\"yes\">Yes</option>\n            <option value=\"no\">No</option>\n          </select>\n        </div>\n\n        <!-- Checkbox options for product interest -->\n        <div class=\"checkbox-container\">\n          <p>What Products are you interested in?</p>\n          <div\n            v-for=\"(product, index) in products\"\n            :key=\"index\"\n            class=\"checkbox-item\"\n          >\n            <input\n              class=\"form-checkbox h-5 w-5 text-indigo-600 transition duration-150 ease-in-out mr-2\"\n              type=\"checkbox\"\n              :id=\"'product_' + index\"\n              :value=\"product\"\n              v-model=\"selectedProducts\"\n            />\n            <label :for=\"'product_' + index\">{{ product }}</label>\n          </div>\n        </div>\n        <!-- Previous and Submit buttons -->\n        <div>\n          <button\n            @click=\"prevStep\"\n            class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mr-2 pagination-button\"\n            :disabled=\"currentStep === 1\"\n          >\n            Previous\n          </button>\n          <button\n            type=\"submit\"\n            class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline pagination-button\"\n          >\n            Submit\n          </button>\n        </div>\n      </div>\n    </form>\n\n    <LegalText>\n      By clicking the button and submitting this form, I agree that I am 18+\n      years old and I provide my signature expressly consenting to receive\n      emails, calls, postal mail, text messages and other forms of communication\n      regarding Health Insurance, or other offers from these companies and\n      agents to the number(s) I provided, including a mobile phone, even if I am\n      on a state or federal Do Not Call and/or Do Not Email registry. The list\n      of companies participating are subject to change. You will receive calls\n      from a maximum of eight providers. Such calls and text messages may use\n      automated telephone dialing systems, artificial or pre-recorded voices. I\n      understand my wireless carrier may impose charges for calls or texts. I\n      understand that my consent to receive communications is not a condition of\n      purchase and I may revoke my consent at any time.By using this site, you\n      acknowledge that you have read and agree to the Privacy Policy.\n    </LegalText>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    tag: {\n      type: String,\n      default: \"newClient\", // Default tag if not provided\n    },\n  },\n  data() {\n    return {\n      currentStep: 1,\n      // Step 1 form fields\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phoneNumber: \"\",\n      birthday: \"\",\n      address: \"\",\n      city: \"\",\n      state: \"\",\n      zipCode: \"\",\n      tags: [],\n      // Step 2 form fields\n      enrolledInMedicare: false, // New property for Medicare enrollment\n      selectedProducts: [], // Array to store selected products\n      products: [\n        \"Medicare Supplement Insurance\",\n        \"Medicare Advantage Insurance\",\n        \"Senior Dental Insurance\",\n        \"Senior Life Insurance\",\n        \"Part D Plan\",\n        \"Other\",\n      ], // List of products\n    };\n  },\n  methods: {\n    async handleSubmit() {\n      try {\n        // Create contact\n        const contact = await this.createContact();\n\n        // Lookup contact to get contactId\n        const contactId = await this.lookupContact();\n\n        // Make a note for the newly created contact\n        const noteData = {\n          contactId: contactId,\n          body: `\\nBirthday: ${this.birthday}\n          \\nAre you currently enrolled in Part A and Part B of Medicare?: ${\n            this.enrolledInMedicare\n          }\\nProducts Interested In: ${this.selectedProducts.join(\", \")}`,\n        };\n\n        const noteResponse = await this.createNote(noteData);\n\n        if (!noteResponse.ok) {\n          throw new Error(\"Failed to create note\");\n        }\n\n        // Reset form fields or show success message\n        this.resetForm();\n\n        console.log(\"Form submitted successfully\");\n      } catch (error) {\n        console.error(\"Error submitting form:\", error);\n      }\n    },\n\n    async createContact() {\n      try {\n        const config = useRuntimeConfig();\n        const myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        myHeaders.append(\"Authorization\", `${config.public.GHL_API_KEY}`);\n\n        const data = {\n          firstName: this.firstName,\n          lastName: this.lastName,\n          email: this.email,\n          phone: this.phoneNumber,\n          address: this.address,\n          city: this.city,\n          state: this.state,\n          zipCode: this.zipCode,\n          birthday: this.birthday,\n          gender: this.gender,\n          tobaccoUse: this.tobaccoUse,\n          anySeriousHealthConditions: this.anySeriousHealthConditions,\n          anyChronicHealthConditions: this.anyChronicHealthConditions,\n          tags: [this.tag], // Assuming this is a tag field\n        };\n\n        const raw = JSON.stringify(data);\n\n        const response = await fetch(\n          \"https://rest.gohighlevel.com/v1/contacts/\",\n          {\n            method: \"POST\",\n            headers: myHeaders,\n            body: raw,\n            redirect: \"follow\",\n          }\n        );\n\n        if (!response.ok) {\n          throw new Error(\"Failed to create contact\");\n        }\n\n        const contact = await response.json();\n        console.log(\"Created contact:\", contact); // Log the contact object\n\n        return contact; // Return the contact object\n      } catch (error) {\n        console.error(\"Error creating contact:\", error);\n        throw error;\n      }\n    },\n    async createNote(data) {\n      try {\n        const config = useRuntimeConfig();\n        const myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        myHeaders.append(\"Authorization\", `${config.public.GHL_API_KEY}`);\n\n        const raw = JSON.stringify(data);\n        console.log(\"data \", data);\n        return await fetch(\n          `https://rest.gohighlevel.com/v1/contacts/${data.contactId}/notes/`,\n          {\n            method: \"POST\",\n            headers: myHeaders,\n            body: raw,\n            redirect: \"follow\",\n          }\n        );\n      } catch (error) {\n        console.error(\"Error creating note:\", error);\n        throw error;\n      }\n    },\n    async lookupContact() {\n      const config = useRuntimeConfig();\n      try {\n        const myHeaders = new Headers();\n        myHeaders.append(\"Authorization\", `${config.public.GHL_API_KEY}`);\n\n        const requestOptions = {\n          method: \"GET\",\n          headers: myHeaders,\n          redirect: \"follow\",\n        };\n\n        const response = await fetch(\n          `https://rest.gohighlevel.com/v1/contacts/lookup?email=${this.email}&phone=${this.phoneNumber}`,\n          requestOptions\n        );\n\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch contact data\");\n        }\n\n        const data = await response.json();\n        console.log(\"Lookup contact response:\", data); // Log the response\n\n        // Assuming contacts array contains multiple contacts, get the first one\n        const contacted = data.contacts[0];\n\n        if (!contacted) {\n          throw new Error(\"No contact found\");\n        }\n\n        return contacted.id; // Return the id of the contacted contact\n      } catch (error) {\n        console.error(\"Error looking up contact:\", error);\n        throw error;\n      }\n    },\n    resetForm() {\n      // Reset all form fields to their initial state or show a success message\n      this.firstName = \"\";\n      this.lastName = \"\";\n      this.email = \"\";\n      this.phoneNumber = \"\";\n      this.address = \"\";\n      this.city = \"\";\n      this.state = \"\";\n      this.zipCode = \"\";\n      this.birthday = \"\";\n      this.gender = \"\";\n      this.tobaccoUse = \"\";\n      this.anySeriousHealthConditions = \"\";\n      this.anyChronicHealthConditions = \"\";\n      this.coverageType = \"\";\n      this.finalExpenses = \"\";\n      this.mortgage = \"\";\n      this.otherDebts = \"\";\n      this.emergencyFund = \"\";\n      this.educationFund = \"\";\n      this.currentAnnualIncome = \"\";\n      this.yearsIncomeNeeded = \"\";\n      this.savingsAndInvestments = \"\";\n      this.retirementSavings = \"\";\n      this.otherAssets = \"\";\n      this.currentLifeInsurance = \"\";\n      this.needsSummary = \"\";\n\n      // Reset any other state variables or show success message logic\n    },\n    nextStep() {\n      this.currentStep++;\n    },\n    prevStep() {\n      this.currentStep--;\n    },\n  },\n};\n</script>\n\n\n\n<style>\n.checkbox-container {\n  text-align: left;\n  margin-top: 20px;\n}\n\n.checkbox-item {\n  margin-bottom: 10px;\n}\n.pagination-button {\n  transition: all 0.3s ease; /* Apply transition to all properties with 0.3s duration and ease timing function */\n}\n\n.pagination-button:hover {\n  transform: scale(1.05); /* Increase button size on hover */\n}\n</style>\n",
      "start": 1761251023434,
      "end": 1761251023529,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1761251023529,
      "end": 1761251023529,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1761251023529,
      "end": 1761251023529,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1761251023529,
      "end": 1761251023529,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1761251023529,
      "end": 1761251023529,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1761251023529,
      "end": 1761251023529,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1761251023529,
      "end": 1761251023529,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1761251023529,
      "end": 1761251023529,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1761251023529,
      "end": 1761251023529,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\nconst _sfc_main = {\n  props: {\n    tag: {\n      type: String,\n      default: \"newClient\", // Default tag if not provided\n    },\n  },\n  data() {\n    return {\n      currentStep: 1,\n      // Step 1 form fields\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phoneNumber: \"\",\n      birthday: \"\",\n      address: \"\",\n      city: \"\",\n      state: \"\",\n      zipCode: \"\",\n      tags: [],\n      // Step 2 form fields\n      enrolledInMedicare: false, // New property for Medicare enrollment\n      selectedProducts: [], // Array to store selected products\n      products: [\n        \"Medicare Supplement Insurance\",\n        \"Medicare Advantage Insurance\",\n        \"Senior Dental Insurance\",\n        \"Senior Life Insurance\",\n        \"Part D Plan\",\n        \"Other\",\n      ], // List of products\n    };\n  },\n  methods: {\n    async handleSubmit() {\n      try {\n        // Create contact\n        const contact = await this.createContact();\n\n        // Lookup contact to get contactId\n        const contactId = await this.lookupContact();\n\n        // Make a note for the newly created contact\n        const noteData = {\n          contactId: contactId,\n          body: `\\nBirthday: ${this.birthday}\n          \\nAre you currently enrolled in Part A and Part B of Medicare?: ${\n            this.enrolledInMedicare\n          }\\nProducts Interested In: ${this.selectedProducts.join(\", \")}`,\n        };\n\n        const noteResponse = await this.createNote(noteData);\n\n        if (!noteResponse.ok) {\n          throw new Error(\"Failed to create note\");\n        }\n\n        // Reset form fields or show success message\n        this.resetForm();\n\n        console.log(\"Form submitted successfully\");\n      } catch (error) {\n        console.error(\"Error submitting form:\", error);\n      }\n    },\n\n    async createContact() {\n      try {\n        const config = useRuntimeConfig();\n        const myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        myHeaders.append(\"Authorization\", `${config.public.GHL_API_KEY}`);\n\n        const data = {\n          firstName: this.firstName,\n          lastName: this.lastName,\n          email: this.email,\n          phone: this.phoneNumber,\n          address: this.address,\n          city: this.city,\n          state: this.state,\n          zipCode: this.zipCode,\n          birthday: this.birthday,\n          gender: this.gender,\n          tobaccoUse: this.tobaccoUse,\n          anySeriousHealthConditions: this.anySeriousHealthConditions,\n          anyChronicHealthConditions: this.anyChronicHealthConditions,\n          tags: [this.tag], // Assuming this is a tag field\n        };\n\n        const raw = JSON.stringify(data);\n\n        const response = await fetch(\n          \"https://rest.gohighlevel.com/v1/contacts/\",\n          {\n            method: \"POST\",\n            headers: myHeaders,\n            body: raw,\n            redirect: \"follow\",\n          }\n        );\n\n        if (!response.ok) {\n          throw new Error(\"Failed to create contact\");\n        }\n\n        const contact = await response.json();\n        console.log(\"Created contact:\", contact); // Log the contact object\n\n        return contact; // Return the contact object\n      } catch (error) {\n        console.error(\"Error creating contact:\", error);\n        throw error;\n      }\n    },\n    async createNote(data) {\n      try {\n        const config = useRuntimeConfig();\n        const myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        myHeaders.append(\"Authorization\", `${config.public.GHL_API_KEY}`);\n\n        const raw = JSON.stringify(data);\n        console.log(\"data \", data);\n        return await fetch(\n          `https://rest.gohighlevel.com/v1/contacts/${data.contactId}/notes/`,\n          {\n            method: \"POST\",\n            headers: myHeaders,\n            body: raw,\n            redirect: \"follow\",\n          }\n        );\n      } catch (error) {\n        console.error(\"Error creating note:\", error);\n        throw error;\n      }\n    },\n    async lookupContact() {\n      const config = useRuntimeConfig();\n      try {\n        const myHeaders = new Headers();\n        myHeaders.append(\"Authorization\", `${config.public.GHL_API_KEY}`);\n\n        const requestOptions = {\n          method: \"GET\",\n          headers: myHeaders,\n          redirect: \"follow\",\n        };\n\n        const response = await fetch(\n          `https://rest.gohighlevel.com/v1/contacts/lookup?email=${this.email}&phone=${this.phoneNumber}`,\n          requestOptions\n        );\n\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch contact data\");\n        }\n\n        const data = await response.json();\n        console.log(\"Lookup contact response:\", data); // Log the response\n\n        // Assuming contacts array contains multiple contacts, get the first one\n        const contacted = data.contacts[0];\n\n        if (!contacted) {\n          throw new Error(\"No contact found\");\n        }\n\n        return contacted.id; // Return the id of the contacted contact\n      } catch (error) {\n        console.error(\"Error looking up contact:\", error);\n        throw error;\n      }\n    },\n    resetForm() {\n      // Reset all form fields to their initial state or show a success message\n      this.firstName = \"\";\n      this.lastName = \"\";\n      this.email = \"\";\n      this.phoneNumber = \"\";\n      this.address = \"\";\n      this.city = \"\";\n      this.state = \"\";\n      this.zipCode = \"\";\n      this.birthday = \"\";\n      this.gender = \"\";\n      this.tobaccoUse = \"\";\n      this.anySeriousHealthConditions = \"\";\n      this.anyChronicHealthConditions = \"\";\n      this.coverageType = \"\";\n      this.finalExpenses = \"\";\n      this.mortgage = \"\";\n      this.otherDebts = \"\";\n      this.emergencyFund = \"\";\n      this.educationFund = \"\";\n      this.currentAnnualIncome = \"\";\n      this.yearsIncomeNeeded = \"\";\n      this.savingsAndInvestments = \"\";\n      this.retirementSavings = \"\";\n      this.otherAssets = \"\";\n      this.currentLifeInsurance = \"\";\n      this.needsSummary = \"\";\n\n      // Reset any other state variables or show success message logic\n    },\n    nextStep() {\n      this.currentStep++;\n    },\n    prevStep() {\n      this.currentStep--;\n    },\n  },\n};\n\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelSelect as _vModelSelect, renderList as _renderList, Fragment as _Fragment, vModelCheckbox as _vModelCheckbox, toDisplayString as _toDisplayString, withModifiers as _withModifiers, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { key: \"step1\" }\nconst _hoisted_2 = { class: \"grid grid-cols-1 md:grid-cols-2 gap-6\" }\nconst _hoisted_3 = { class: \"relative mb-6 group\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"floating_first_name\",\n  class: \"block mb-1 text-sm font-medium text-gray-700 text-left\"\n}, \"First Name:\", -1)\nconst _hoisted_5 = { class: \"relative mb-6 group\" }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"floating_last_name\",\n  class: \"block mb-1 text-sm font-medium text-gray-700 text-left\"\n}, \"Last Name:\", -1)\nconst _hoisted_7 = { class: \"relative mb-6 group\" }\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\",\n  class: \"block mb-1 text-sm font-medium text-gray-700 text-left\"\n}, \"Email:\", -1)\nconst _hoisted_9 = { class: \"relative mb-6 group\" }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"phoneNumber\",\n  class: \"block mb-1 text-sm font-medium text-gray-700 text-left\"\n}, \"Phone Number:\", -1)\nconst _hoisted_11 = { class: \"relative mb-6 group\" }\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"birthday\",\n  class: \"block mb-1 text-sm font-medium text-gray-700 text-left\"\n}, \"Birthday:\", -1)\nconst _hoisted_13 = { class: \"relative mb-6 group\" }\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"address\",\n  class: \"block mb-1 text-sm font-medium text-gray-700 text-left\"\n}, \"Address:\", -1)\nconst _hoisted_15 = { class: \"relative mb-6 group\" }\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"city\",\n  class: \"block mb-1 text-sm font-medium text-gray-700 text-left\"\n}, \"City:\", -1)\nconst _hoisted_17 = { class: \"relative mb-6 group\" }\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"state\",\n  class: \"block mb-1 text-sm font-medium text-gray-700 text-left\"\n}, \"State:\", -1)\nconst _hoisted_19 = { class: \"relative mb-6 group\" }\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"zipCode\",\n  class: \"block mb-1 text-sm font-medium text-gray-700 text-left\"\n}, \"Zip Code:\", -1)\nconst _hoisted_21 = [\"disabled\"]\nconst _hoisted_22 = { key: \"step2\" }\nconst _hoisted_23 = { class: \"relative mb-6 group\" }\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"medicareEnrollment\",\n  class: \"block mb-1 text-sm font-medium text-gray-700 text-left\"\n}, \" Are you currently enrolled in Part A and Part B of Medicare? \", -1)\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"yes\" }, \"Yes\", -1)\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"no\" }, \"No\", -1)\nconst _hoisted_27 = [\n  _hoisted_25,\n  _hoisted_26\n]\nconst _hoisted_28 = { class: \"checkbox-container\" }\nconst _hoisted_29 = /*#__PURE__*/_createElementVNode(\"p\", null, \"What Products are you interested in?\", -1)\nconst _hoisted_30 = [\"id\", \"value\"]\nconst _hoisted_31 = [\"for\"]\nconst _hoisted_32 = [\"disabled\"]\nconst _hoisted_33 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline pagination-button\"\n}, \" Submit \", -1)\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_LegalText = _resolveComponent(\"LegalText\")\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"form\", {\n      onSubmit: _cache[13] || (_cache[13] = _withModifiers((...args) => ($options.handleSubmit && $options.handleSubmit(...args)), [\"prevent\"]))\n    }, [\n      ($data.currentStep === 1)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n            _createElementVNode(\"div\", _hoisted_2, [\n              _createElementVNode(\"div\", _hoisted_3, [\n                _hoisted_4,\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"text\",\n                  \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => (($data.firstName) = $event)),\n                  id: \"floating_first_name\",\n                  name: \"floating_first_name\",\n                  class: \"block w-full py-2.5 px-4 text-sm text-gray-800 bg-gray-100 border-b-2 border-gray-300 focus:outline-none focus:border-blue-500\",\n                  placeholder: \" \",\n                  required: \"\"\n                }, null, 512), [\n                  [_vModelText, $data.firstName]\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_5, [\n                _hoisted_6,\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"text\",\n                  \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => (($data.lastName) = $event)),\n                  id: \"floating_last_name\",\n                  name: \"floating_last_name\",\n                  class: \"block w-full py-2.5 px-4 text-sm text-gray-800 bg-gray-100 border-b-2 border-gray-300 focus:outline-none focus:border-blue-500\",\n                  placeholder: \" \",\n                  required: \"\"\n                }, null, 512), [\n                  [_vModelText, $data.lastName]\n                ])\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_7, [\n              _hoisted_8,\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"email\",\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => (($data.email) = $event)),\n                id: \"email\",\n                name: \"email\",\n                class: \"block w-full py-2.5 px-4 text-sm text-gray-800 bg-gray-100 border-b-2 border-gray-300 focus:outline-none focus:border-blue-500\",\n                placeholder: \" \",\n                required: \"\"\n              }, null, 512), [\n                [_vModelText, $data.email]\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_9, [\n              _hoisted_10,\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"tel\",\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => (($data.phoneNumber) = $event)),\n                id: \"phoneNumber\",\n                name: \"phoneNumber\",\n                class: \"block w-full py-2.5 px-4 text-sm text-gray-800 bg-gray-100 border-b-2 border-gray-300 focus:outline-none focus:border-blue-500\",\n                placeholder: \" \",\n                required: \"\"\n              }, null, 512), [\n                [_vModelText, $data.phoneNumber]\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_11, [\n              _hoisted_12,\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"date\",\n                \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => (($data.birthday) = $event)),\n                id: \"birthday\",\n                name: \"birthday\",\n                class: \"block w-full py-2.5 px-4 text-sm text-gray-800 bg-gray-100 border-b-2 border-gray-300 focus:outline-none focus:border-blue-500\",\n                placeholder: \" \",\n                required: \"\"\n              }, null, 512), [\n                [_vModelText, $data.birthday]\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_13, [\n              _hoisted_14,\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => (($data.address) = $event)),\n                id: \"address\",\n                name: \"address\",\n                class: \"block w-full py-2.5 px-4 text-sm text-gray-800 bg-gray-100 border-b-2 border-gray-300 focus:outline-none focus:border-blue-500\",\n                placeholder: \" \",\n                required: \"\"\n              }, null, 512), [\n                [_vModelText, $data.address]\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_15, [\n              _hoisted_16,\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => (($data.city) = $event)),\n                id: \"city\",\n                name: \"city\",\n                class: \"block w-full py-2.5 px-4 text-sm text-gray-800 bg-gray-100 border-b-2 border-gray-300 focus:outline-none focus:border-blue-500\",\n                placeholder: \" \",\n                required: \"\"\n              }, null, 512), [\n                [_vModelText, $data.city]\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_17, [\n              _hoisted_18,\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => (($data.state) = $event)),\n                id: \"state\",\n                name: \"state\",\n                class: \"block w-full py-2.5 px-4 text-sm text-gray-800 bg-gray-100 border-b-2 border-gray-300 focus:outline-none focus:border-blue-500\",\n                placeholder: \" \",\n                required: \"\"\n              }, null, 512), [\n                [_vModelText, $data.state]\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_19, [\n              _hoisted_20,\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => (($data.zipCode) = $event)),\n                id: \"zipCode\",\n                name: \"zipCode\",\n                class: \"block w-full py-2.5 px-4 text-sm text-gray-800 bg-gray-100 border-b-2 border-gray-300 focus:outline-none focus:border-blue-500\",\n                placeholder: \" \",\n                required: \"\"\n              }, null, 512), [\n                [_vModelText, $data.zipCode]\n              ])\n            ]),\n            _createElementVNode(\"button\", {\n              onClick: _cache[9] || (_cache[9] = (...args) => ($options.nextStep && $options.nextStep(...args))),\n              class: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded pagination-button\",\n              disabled: $data.currentStep === 4\n            }, \" Next \", 8, _hoisted_21)\n          ]))\n        : _createCommentVNode(\"\", true),\n      ($data.currentStep === 2)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_22, [\n            _createElementVNode(\"div\", _hoisted_23, [\n              _hoisted_24,\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => (($data.enrolledInMedicare) = $event)),\n                id: \"medicareEnrollment\",\n                name: \"medicareEnrollment\",\n                class: \"block w-full py-2.5 px-4 text-sm text-gray-800 bg-gray-100 border-b-2 border-gray-300 focus:outline-none focus:border-blue-500\",\n                required: \"\"\n              }, _hoisted_27, 512), [\n                [_vModelSelect, $data.enrolledInMedicare]\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_28, [\n              _hoisted_29,\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.products, (product, index) => {\n                return (_openBlock(), _createElementBlock(\"div\", {\n                  key: index,\n                  class: \"checkbox-item\"\n                }, [\n                  _withDirectives(_createElementVNode(\"input\", {\n                    class: \"form-checkbox h-5 w-5 text-indigo-600 transition duration-150 ease-in-out mr-2\",\n                    type: \"checkbox\",\n                    id: 'product_' + index,\n                    value: product,\n                    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => (($data.selectedProducts) = $event))\n                  }, null, 8, _hoisted_30), [\n                    [_vModelCheckbox, $data.selectedProducts]\n                  ]),\n                  _createElementVNode(\"label\", {\n                    for: 'product_' + index\n                  }, _toDisplayString(product), 9, _hoisted_31)\n                ]))\n              }), 128))\n            ]),\n            _createElementVNode(\"div\", null, [\n              _createElementVNode(\"button\", {\n                onClick: _cache[12] || (_cache[12] = (...args) => ($options.prevStep && $options.prevStep(...args))),\n                class: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mr-2 pagination-button\",\n                disabled: $data.currentStep === 1\n              }, \" Previous \", 8, _hoisted_32),\n              _hoisted_33\n            ])\n          ]))\n        : _createCommentVNode(\"\", true)\n    ], 32),\n    _createVNode(_component_LegalText, null, {\n      default: _withCtx(() => [\n        _createTextVNode(\" By clicking the button and submitting this form, I agree that I am 18+ years old and I provide my signature expressly consenting to receive emails, calls, postal mail, text messages and other forms of communication regarding Health Insurance, or other offers from these companies and agents to the number(s) I provided, including a mobile phone, even if I am on a state or federal Do Not Call and/or Do Not Email registry. The list of companies participating are subject to change. You will receive calls from a maximum of eight providers. Such calls and text messages may use automated telephone dialing systems, artificial or pre-recorded voices. I understand my wireless carrier may impose charges for calls or texts. I understand that my consent to receive communications is not a condition of purchase and I may revoke my consent at any time.By using this site, you acknowledge that you have read and agree to the Privacy Policy. \")\n      ]),\n      _: 1\n    })\n  ]))\n}\n\nimport \"/Users/amerusfinancial/Desktop/projects/Amerus/app/components/forms/SeniorMedicareQuoteForm.vue?vue&type=style&index=0&lang.css\"\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render]])",
      "start": 1761251023529,
      "end": 1761251023537,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "result": "import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => import(\"/Users/amerusfinancial/Desktop/projects/Amerus/app/components/forms/SeniorMedicareQuoteForm.vue\").then(r => r.default))",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "replace",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "post"
    },
    {
      "name": "unhead:use-seo-meta-transform",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "result": "import { __vitePreload } from \"\u0000vite/preload-helper.js\";import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => __vitePreload(() => import(\"/Users/amerusfinancial/Desktop/projects/Amerus/app/components/forms/SeniorMedicareQuoteForm.vue\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0,import.meta.url).then(r => r.default))",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:reporter",
      "start": 1761251023537,
      "end": 1761251023537,
      "order": "normal"
    }
  ]
}
