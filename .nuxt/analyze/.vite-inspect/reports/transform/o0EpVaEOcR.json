{
  "resolvedId": "/Users/amerusfinancial/Desktop/projects/Amerus/app/composables/useAuth.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { useRouter, useState } from \"#app\";\nimport { ISession } from \"~~/types/ISession\";\nimport { IUser } from \"~/types/IUser\";\nimport useErrorMapper from \"./useErrorMapper\";\n\nexport const useAuthCookie = () => useCookie('auth_token')\n\nexport async function useUser(): Promise<IUser | null> {\n  const authCookie = useAuthCookie().value\n  const user = useState<IUser | null>('user')\n\n  if (authCookie && !user.value) {\n\n    const cookieHeaders = useRequestHeaders(['cookie'])\n\n    const { data } = await useFetch<IUser>(`/api/auth/getByAuthToken`, {\n      headers: cookieHeaders as HeadersInit,\n    })\n\n    user.value = data.value\n  }\n\n  return user.value\n}\n\nexport async function useLoggedIn() {\n  const user = await useUser()\n\n  if (!user) {\n    return false\n  }\n\n  if (user?.id == null) {\n    return false\n  }\n\n  return true\n}\n\nexport async function userLogout() {\n  await useFetch('/api/auth/logout')\n  useState('user').value = null\n  await useRouter().push('/')\n}\n\nexport async function registerWithEmail(\n  username: string,\n  firstName: string,\n  lastName: string,\n  phone: string,\n  email: string,\n  password: string\n): Promise<FormValidation> {\n\n  try {\n    const data = await $fetch<ISession>('/api/auth/register', {\n      method: 'POST',\n      body:  { username, firstName, lastName, phone, email, password }\n    })\n\n    if (data) {\n      useState('user').value = data\n      await useRouter().push('/subscribe')\n    }\n\n    return { hasErrors: false, loggedIn: true }\n  } catch (error: any) {\n    return useErrorMapper(error.data.data)\n  }\n}\n\nexport async function loginWithEmail(usernameOrEmail: string, password: string): Promise<FormValidation> {\n  try {\n    const result = await $fetch('/api/auth/login', { method: 'POST', body: { usernameOrEmail: usernameOrEmail, password: password } })\n\n    if (!result?.id) {\n      throw Error('something went wrong')\n    }\n    useState('user').value = result\n    await useRouter().push('/dashboard')\n\n    return { hasErrors: false, loggedIn: true }\n  } catch (error: any) {\n    return useErrorMapper(error.data.data)\n  }\n}",
      "start": 1761251029466,
      "end": 1761251034155,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1761251034155,
      "end": 1761251034155,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1761251034155,
      "end": 1761251034155,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1761251034155,
      "end": 1761251034155,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1761251034155,
      "end": 1761251034155,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1761251034155,
      "end": 1761251034155,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { useRouter, useState } from \"#app\";\nimport useErrorMapper from \"./useErrorMapper\";\nexport const useAuthCookie = () => useCookie(\"auth_token\");\nexport async function useUser() {\n  const authCookie = useAuthCookie().value;\n  const user = useState(\"user\");\n  if (authCookie && !user.value) {\n    const cookieHeaders = useRequestHeaders([\"cookie\"]);\n    const { data } = await useFetch(`/api/auth/getByAuthToken`, {\n      headers: cookieHeaders\n    });\n    user.value = data.value;\n  }\n  return user.value;\n}\nexport async function useLoggedIn() {\n  const user = await useUser();\n  if (!user) {\n    return false;\n  }\n  if (user?.id == null) {\n    return false;\n  }\n  return true;\n}\nexport async function userLogout() {\n  await useFetch(\"/api/auth/logout\");\n  useState(\"user\").value = null;\n  await useRouter().push(\"/\");\n}\nexport async function registerWithEmail(username, firstName, lastName, phone, email, password) {\n  try {\n    const data = await $fetch(\"/api/auth/register\", {\n      method: \"POST\",\n      body: { username, firstName, lastName, phone, email, password }\n    });\n    if (data) {\n      useState(\"user\").value = data;\n      await useRouter().push(\"/subscribe\");\n    }\n    return { hasErrors: false, loggedIn: true };\n  } catch (error) {\n    return useErrorMapper(error.data.data);\n  }\n}\nexport async function loginWithEmail(usernameOrEmail, password) {\n  try {\n    const result = await $fetch(\"/api/auth/login\", { method: \"POST\", body: { usernameOrEmail, password } });\n    if (!result?.id) {\n      throw Error(\"something went wrong\");\n    }\n    useState(\"user\").value = result;\n    await useRouter().push(\"/dashboard\");\n    return { hasErrors: false, loggedIn: true };\n  } catch (error) {\n    return useErrorMapper(error.data.data);\n  }\n}\n",
      "start": 1761251034155,
      "end": 1761251034557,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/amerusfinancial/Desktop/projects/Amerus/app/composables/useAuth.ts"
        ],
        "sourcesContent": [
          "import { useRouter, useState } from \"#app\";\nimport { ISession } from \"~~/types/ISession\";\nimport { IUser } from \"~/types/IUser\";\nimport useErrorMapper from \"./useErrorMapper\";\n\nexport const useAuthCookie = () => useCookie('auth_token')\n\nexport async function useUser(): Promise<IUser | null> {\n  const authCookie = useAuthCookie().value\n  const user = useState<IUser | null>('user')\n\n  if (authCookie && !user.value) {\n\n    const cookieHeaders = useRequestHeaders(['cookie'])\n\n    const { data } = await useFetch<IUser>(`/api/auth/getByAuthToken`, {\n      headers: cookieHeaders as HeadersInit,\n    })\n\n    user.value = data.value\n  }\n\n  return user.value\n}\n\nexport async function useLoggedIn() {\n  const user = await useUser()\n\n  if (!user) {\n    return false\n  }\n\n  if (user?.id == null) {\n    return false\n  }\n\n  return true\n}\n\nexport async function userLogout() {\n  await useFetch('/api/auth/logout')\n  useState('user').value = null\n  await useRouter().push('/')\n}\n\nexport async function registerWithEmail(\n  username: string,\n  firstName: string,\n  lastName: string,\n  phone: string,\n  email: string,\n  password: string\n): Promise<FormValidation> {\n\n  try {\n    const data = await $fetch<ISession>('/api/auth/register', {\n      method: 'POST',\n      body:  { username, firstName, lastName, phone, email, password }\n    })\n\n    if (data) {\n      useState('user').value = data\n      await useRouter().push('/subscribe')\n    }\n\n    return { hasErrors: false, loggedIn: true }\n  } catch (error: any) {\n    return useErrorMapper(error.data.data)\n  }\n}\n\nexport async function loginWithEmail(usernameOrEmail: string, password: string): Promise<FormValidation> {\n  try {\n    const result = await $fetch('/api/auth/login', { method: 'POST', body: { usernameOrEmail: usernameOrEmail, password: password } })\n\n    if (!result?.id) {\n      throw Error('something went wrong')\n    }\n    useState('user').value = result\n    await useRouter().push('/dashboard')\n\n    return { hasErrors: false, loggedIn: true }\n  } catch (error: any) {\n    return useErrorMapper(error.data.data)\n  }\n}"
        ],
        "mappings": "AAAA,SAAS,WAAW,gBAAgB;AAGpC,OAAO,oBAAoB;AAEpB,aAAM,gBAAgB,MAAM,UAAU,YAAY;AAEzD,sBAAsB,UAAiC;AACrD,QAAM,aAAa,cAAc,EAAE;AACnC,QAAM,OAAO,SAAuB,MAAM;AAE1C,MAAI,cAAc,CAAC,KAAK,OAAO;AAE7B,UAAM,gBAAgB,kBAAkB,CAAC,QAAQ,CAAC;AAElD,UAAM,EAAE,KAAK,IAAI,MAAM,SAAgB,4BAA4B;AAAA,MACjE,SAAS;AAAA,IACX,CAAC;AAED,SAAK,QAAQ,KAAK;AAAA,EACpB;AAEA,SAAO,KAAK;AACd;AAEA,sBAAsB,cAAc;AAClC,QAAM,OAAO,MAAM,QAAQ;AAE3B,MAAI,CAAC,MAAM;AACT,WAAO;AAAA,EACT;AAEA,MAAI,MAAM,MAAM,MAAM;AACpB,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AAEA,sBAAsB,aAAa;AACjC,QAAM,SAAS,kBAAkB;AACjC,WAAS,MAAM,EAAE,QAAQ;AACzB,QAAM,UAAU,EAAE,KAAK,GAAG;AAC5B;AAEA,sBAAsB,kBACpB,UACA,WACA,UACA,OACA,OACA,UACyB;AAEzB,MAAI;AACF,UAAM,OAAO,MAAM,OAAiB,sBAAsB;AAAA,MACxD,QAAQ;AAAA,MACR,MAAO,EAAE,UAAU,WAAW,UAAU,OAAO,OAAO,SAAS;AAAA,IACjE,CAAC;AAED,QAAI,MAAM;AACR,eAAS,MAAM,EAAE,QAAQ;AACzB,YAAM,UAAU,EAAE,KAAK,YAAY;AAAA,IACrC;AAEA,WAAO,EAAE,WAAW,OAAO,UAAU,KAAK;AAAA,EAC5C,SAAS,OAAY;AACnB,WAAO,eAAe,MAAM,KAAK,IAAI;AAAA,EACvC;AACF;AAEA,sBAAsB,eAAe,iBAAyB,UAA2C;AACvG,MAAI;AACF,UAAM,SAAS,MAAM,OAAO,mBAAmB,EAAE,QAAQ,QAAQ,MAAM,EAAE,iBAAkC,SAAmB,EAAE,CAAC;AAEjI,QAAI,CAAC,QAAQ,IAAI;AACf,YAAM,MAAM,sBAAsB;AAAA,IACpC;AACA,aAAS,MAAM,EAAE,QAAQ;AACzB,UAAM,UAAU,EAAE,KAAK,YAAY;AAEnC,WAAO,EAAE,WAAW,OAAO,UAAU,KAAK;AAAA,EAC5C,SAAS,OAAY;AACnB,WAAO,eAAe,MAAM,KAAK,IAAI;AAAA,EACvC;AACF;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1761251034766,
      "end": 1761251034766,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1761251034767,
      "end": 1761251034767,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1761251034783,
      "end": 1761251034784,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1761251034785,
      "end": 1761251034786,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1761251034845,
      "end": 1761251034845,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1761251034848,
      "end": 1761251034848,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1761251034849,
      "end": 1761251034849,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1761251034876,
      "end": 1761251034877,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1761251034892,
      "end": 1761251034892,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1761251034893,
      "end": 1761251034893,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1761251034895,
      "end": 1761251034895,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1761251034896,
      "end": 1761251034896,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1761251034896,
      "end": 1761251034897,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1761251034897,
      "end": 1761251034897,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1761251034897,
      "end": 1761251034897,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1761251034898,
      "end": 1761251034898,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1761251034899,
      "end": 1761251034899,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1761251034899,
      "end": 1761251034899,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "result": "import { useRouter, useState } from \"#app\";\nimport useErrorMapper from \"./useErrorMapper\";\nexport const useAuthCookie = () => useCookie(\"auth_token\");\nexport async function useUser() {\n  const authCookie = useAuthCookie().value;\n  const user = useState(\"user\");\n  if (authCookie && !user.value) {\n    const cookieHeaders = useRequestHeaders([\"cookie\"]);\n    const { data } = await useFetch(`/api/auth/getByAuthToken`, {\n      headers: cookieHeaders\n    }, '$OWrSqFye87');\n    user.value = data.value;\n  }\n  return user.value;\n}\nexport async function useLoggedIn() {\n  const user = await useUser();\n  if (!user) {\n    return false;\n  }\n  if (user?.id == null) {\n    return false;\n  }\n  return true;\n}\nexport async function userLogout() {\n  await useFetch(\"/api/auth/logout\", '$gU3rt8MuY1');\n  useState(\"user\").value = null;\n  await useRouter().push(\"/\");\n}\nexport async function registerWithEmail(username, firstName, lastName, phone, email, password) {\n  try {\n    const data = await $fetch(\"/api/auth/register\", {\n      method: \"POST\",\n      body: { username, firstName, lastName, phone, email, password }\n    });\n    if (data) {\n      useState(\"user\").value = data;\n      await useRouter().push(\"/subscribe\");\n    }\n    return { hasErrors: false, loggedIn: true };\n  } catch (error) {\n    return useErrorMapper(error.data.data);\n  }\n}\nexport async function loginWithEmail(usernameOrEmail, password) {\n  try {\n    const result = await $fetch(\"/api/auth/login\", { method: \"POST\", body: { usernameOrEmail, password } });\n    if (!result?.id) {\n      throw Error(\"something went wrong\");\n    }\n    useState(\"user\").value = result;\n    await useRouter().push(\"/dashboard\");\n    return { hasErrors: false, loggedIn: true };\n  } catch (error) {\n    return useErrorMapper(error.data.data);\n  }\n}\n",
      "start": 1761251034899,
      "end": 1761251034910,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,gBAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChhG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnjtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC;AACH,CAAC;"
      }
    },
    {
      "name": "unhead:use-seo-meta-transform",
      "start": 1761251034911,
      "end": 1761251034911,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useCookie } from '#app/composables/cookie';\nimport { useRequestHeaders } from '#app/composables/ssr';\nimport { useFetch } from '#app/composables/fetch';\nimport { useRouter, useState } from \"#app\";\nimport useErrorMapper from \"./useErrorMapper\";\nexport const useAuthCookie = () => useCookie(\"auth_token\");\nexport async function useUser() {\n  const authCookie = useAuthCookie().value;\n  const user = useState(\"user\");\n  if (authCookie && !user.value) {\n    const cookieHeaders = useRequestHeaders([\"cookie\"]);\n    const { data } = await useFetch(`/api/auth/getByAuthToken`, {\n      headers: cookieHeaders\n    }, '$OWrSqFye87');\n    user.value = data.value;\n  }\n  return user.value;\n}\nexport async function useLoggedIn() {\n  const user = await useUser();\n  if (!user) {\n    return false;\n  }\n  if (user?.id == null) {\n    return false;\n  }\n  return true;\n}\nexport async function userLogout() {\n  await useFetch(\"/api/auth/logout\", '$gU3rt8MuY1');\n  useState(\"user\").value = null;\n  await useRouter().push(\"/\");\n}\nexport async function registerWithEmail(username, firstName, lastName, phone, email, password) {\n  try {\n    const data = await $fetch(\"/api/auth/register\", {\n      method: \"POST\",\n      body: { username, firstName, lastName, phone, email, password }\n    });\n    if (data) {\n      useState(\"user\").value = data;\n      await useRouter().push(\"/subscribe\");\n    }\n    return { hasErrors: false, loggedIn: true };\n  } catch (error) {\n    return useErrorMapper(error.data.data);\n  }\n}\nexport async function loginWithEmail(usernameOrEmail, password) {\n  try {\n    const result = await $fetch(\"/api/auth/login\", { method: \"POST\", body: { usernameOrEmail, password } });\n    if (!result?.id) {\n      throw Error(\"something went wrong\");\n    }\n    useState(\"user\").value = result;\n    await useRouter().push(\"/dashboard\");\n    return { hasErrors: false, loggedIn: true };\n  } catch (error) {\n    return useErrorMapper(error.data.data);\n  }\n}\n",
      "start": 1761251034911,
      "end": 1761251034919,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChhG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnjtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC;AACH,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1761251034920,
      "end": 1761251034920,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1761251034920,
      "end": 1761251034920,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1761251034920,
      "end": 1761251034929,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1761251034929,
      "end": 1761251034930,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1761251034930,
      "end": 1761251034930,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1761251034930,
      "end": 1761251034930,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1761251034931,
      "end": 1761251034932,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1761251034983,
      "end": 1761251034983,
      "order": "normal"
    }
  ]
}
